{"version":3,"file":"primeng-checkbox.umd.js","sources":["ng://primeng/checkbox/checkbox.ts"],"sourcesContent":["import {NgModule,Component,Input,Output,EventEmitter,forwardRef,ChangeDetectorRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor, FormControl} from '@angular/forms';\n\nexport const CHECKBOX_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Checkbox),\n  multi: true\n};\n\n@Component({\n    selector: 'p-checkbox',\n    template: `\n        <div [ngStyle]=\"style\" [ngClass]=\"{'ui-chkbox ui-widget': true,'ui-chkbox-readonly': readonly}\" [class]=\"styleClass\">\n            <div class=\"ui-helper-hidden-accessible\">\n                <input #cb type=\"checkbox\" [attr.id]=\"inputId\" [name]=\"name\" [readonly]=\"readonly\" [value]=\"value\" [checked]=\"checked\" (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\"\n                [ngClass]=\"{'ui-state-focus':focused}\" (change)=\"handleChange($event)\" [disabled]=\"disabled\" [attr.tabindex]=\"tabindex\" [attr.aria-labelledby]=\"ariaLabelledBy\">\n            </div>\n            <div class=\"ui-chkbox-box ui-widget ui-corner-all ui-state-default\" (click)=\"onClick($event,cb,true)\"\n                        [ngClass]=\"{'ui-state-active':checked,'ui-state-disabled':disabled,'ui-state-focus':focused}\" role=\"checkbox\" [attr.aria-checked]=\"checked\">\n                <span class=\"ui-chkbox-icon ui-clickable\" [ngClass]=\"checked ? checkboxIcon : null\"></span>\n            </div>\n        </div>\n        <label (click)=\"onClick($event,cb,true)\" [class]=\"labelStyleClass\"\n                [ngClass]=\"{'ui-chkbox-label': true, 'ui-label-active':checked, 'ui-label-disabled':disabled, 'ui-label-focus':focused}\"\n                *ngIf=\"label\" [attr.for]=\"inputId\">{{label}}</label>\n    `,\n    providers: [CHECKBOX_VALUE_ACCESSOR]\n})\nexport class Checkbox implements ControlValueAccessor {\n\n    @Input() value: any;\n\n    @Input() name: string;\n\n    @Input() disabled: boolean;\n    \n    @Input() binary: string;\n    \n    @Input() label: string;\n\n    @Input() ariaLabelledBy: string;\n\n    @Input() tabindex: number;\n\n    @Input() inputId: string;\n    \n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() labelStyleClass: string;\n    \n    @Input() formControl: FormControl;\n    \n    @Input() checkboxIcon: string = 'pi pi-check';\n    \n    @Input() readonly: boolean;\n\n    @Output() onChange: EventEmitter<any> = new EventEmitter();\n    \n    model: any;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n        \n    focused: boolean = false;\n    \n    checked: boolean = false;\n\n    constructor(private cd: ChangeDetectorRef) {}\n\n    onClick(event,checkbox,focus:boolean) {\n        event.preventDefault();\n        \n        if(this.disabled || this.readonly) {\n            return;\n        }\n        \n        this.checked = !this.checked;\n        this.updateModel();\n        \n        if(focus) {\n            checkbox.focus();\n        }\n    }\n    \n    updateModel() {\n        if(!this.binary) {\n            if(this.checked)\n                this.addValue();\n            else\n                this.removeValue();\n\n            this.onModelChange(this.model);\n            \n            if(this.formControl) {\n                this.formControl.setValue(this.model);\n            }\n        }\n        else {\n            this.onModelChange(this.checked);\n        }\n        \n        this.onChange.emit(this.checked);\n    }\n    \n    handleChange(event)Â {\n        if (!this.readonly) {\n            this.checked = event.target.checked;\n            this.updateModel();\n        }\n    }\n\n    isChecked(): boolean {\n        if(this.binary)\n            return this.model;\n        else\n            return this.model && this.model.indexOf(this.value) > -1;\n    }\n\n    removeValue() {\n        this.model = this.model.filter(val => val !== this.value);\n    }\n\n    addValue() {\n        if(this.model)\n            this.model = [...this.model, this.value];\n        else\n            this.model = [this.value];\n    }\n    \n    onFocus(event) {\n        this.focused = true;\n    }\n\n    onBlur(event) {\n        this.focused = false;\n        this.onModelTouched();\n    }\n    \n    writeValue(model: any) : void {\n        this.model = model;\n        this.checked = this.isChecked();\n        this.cd.markForCheck();\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    setDisabledState(val: boolean): void {\n        this.disabled = val;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Checkbox],\n    declarations: [Checkbox]\n})\nexport class CheckboxModule { }\n"],"names":["NG_VALUE_ACCESSOR","forwardRef","EventEmitter","ChangeDetectorRef","Input","Output","Component","NgModule","CommonModule"],"mappings":"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"}