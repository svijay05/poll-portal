{"version":3,"sources":["ng://primeng/galleria/galleria.ts"],"names":["Galleria","el","this","panelWidth","panelHeight","frameWidth","frameHeight","activeIndex","showFilmstrip","autoPlay","transitionInterval","showCaption","effectDuration","onImageClicked","EventEmitter","onImageChange","stripLeft","prototype","ngAfterViewChecked","imagesChanged","stopSlideshow","render","Object","defineProperty","_images","value","initialized","ngAfterViewInit","container","nativeElement","children","panelWrapper","DomHandler","findSingle","stripWrapper","strip","images","length","panels","find","frames","style","width","height","caption","bottom","getOuterHeight","startSlideshow","visibility","_this","interval","setInterval","next","slideshowActive","clearInterval","clickNavRight","clickNavLeft","prev","frameClick","frame","select","index","reposition","newPanel","fadeIn","newFrame","undefined","frameLeft","offsetLeft","stepFactor","parseInt","getComputedStyle","frameViewportLeft","emit","clickImage","event","image","i","originalEvent","ngOnDestroy","ElementRef","__decorate","Input","Output","Component","selector","template","GalleriaModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,AfterViewChecked,AfterViewInit,OnDestroy,Input,Output,EventEmitter} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\n\n@Component({\n    selector: 'p-galleria',\n    template: `\n        <div [ngClass]=\"{'ui-galleria ui-widget ui-widget-content ui-corner-all':true}\" [ngStyle]=\"style\" [class]=\"styleClass\" [style.width.px]=\"panelWidth\">\n            <ul class=\"ui-galleria-panel-wrapper\" [style.width.px]=\"panelWidth\" [style.height.px]=\"panelHeight\">\n                <li *ngFor=\"let image of images;let i=index\" class=\"ui-galleria-panel\" [ngClass]=\"{'ui-helper-hidden':i!=activeIndex}\"\n                    [style.width.px]=\"panelWidth\" [style.height.px]=\"panelHeight\" (click)=\"clickImage($event,image,i)\">\n                    <img class=\"ui-panel-images\" [src]=\"image.source\" [alt]=\"image.alt\" [title]=\"image.title\"/>\n                </li>\n            </ul>\n            <div [ngClass]=\"{'ui-galleria-filmstrip-wrapper':true}\" *ngIf=\"showFilmstrip\">\n                <ul class=\"ui-galleria-filmstrip\" style=\"transition:left 1s\" [style.left.px]=\"stripLeft\">\n                    <li #frame *ngFor=\"let image of images;let i=index\" [ngClass]=\"{'ui-galleria-frame-active':i==activeIndex}\" class=\"ui-galleria-frame\" (click)=\"frameClick(frame)\"\n                        [style.width.px]=\"frameWidth\" [style.height.px]=\"frameHeight\" [style.transition]=\"'opacity 0.75s ease'\">\n                        <div class=\"ui-galleria-frame-content\">\n                            <img [src]=\"image.source\" [alt]=\"image.alt\" [title]=\"image.title\" class=\"ui-galleria-frame-image\"\n                                [style.width.px]=\"frameWidth\" [style.height.px]=\"frameHeight\">\n                        </div>\n                    </li>\n                </ul>\n            </div>\n            <div class=\"ui-galleria-nav-prev pi pi-fw pi-chevron-left\" (click)=\"clickNavLeft()\" [style.bottom.px]=\"frameHeight/2\" *ngIf=\"activeIndex !== 0\"></div>\n            <div class=\"ui-galleria-nav-next pi pi-fw pi-chevron-right\" (click)=\"clickNavRight()\" [style.bottom.px]=\"frameHeight/2\"></div>\n            <div class=\"ui-galleria-caption\" *ngIf=\"showCaption&&images\" style=\"display:block\">\n                <h4>{{images[activeIndex]?.title}}</h4><p>{{images[activeIndex]?.alt}}</p>\n            </div>\n        </div>\n    `\n})\nexport class Galleria implements AfterViewChecked,AfterViewInit,OnDestroy {\n        \n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() panelWidth: number = 600;\n\n    @Input() panelHeight: number = 400;\n\n    @Input() frameWidth: number = 60;\n    \n    @Input() frameHeight: number = 40;\n\n    @Input() activeIndex: number = 0;\n\n    @Input() showFilmstrip: boolean = true;\n\n    @Input() autoPlay: boolean = true;\n\n    @Input() transitionInterval: number = 4000;\n\n    @Input() showCaption: boolean = true;\n\n    @Input() effectDuration: number = 500;\n    \n    @Output() onImageClicked = new EventEmitter();\n\n    @Output() onImageChange = new EventEmitter();\n    \n    _images: any[];\n    \n    slideshowActive: boolean;\n    \n    public container: any;\n    \n    public panelWrapper: any;\n    \n    public panels: any;\n    \n    public caption: any;\n    \n    public stripWrapper: any;\n    \n    public strip: any;\n    \n    public frames: any;\n    \n    public interval: any;\n    \n    public stripLeft: number = 0;\n    \n    public imagesChanged: boolean;\n    \n    public initialized: boolean;\n\n    constructor(public el: ElementRef) {}\n    \n    ngAfterViewChecked() {\n        if(this.imagesChanged) {\n            this.stopSlideshow();\n            this.render();\n            this.imagesChanged = false;\n        }\n    }\n\n    @Input() get images(): any[] {\n        return this._images;\n    }\n    set images(value:any[]) {\n        this._images = value;\n        this.imagesChanged = true;\n\n        if (this.initialized) {\n            this.activeIndex = 0;\n        }\n    }\n        \n    ngAfterViewInit() {\n        this.container = this.el.nativeElement.children[0];\n        this.panelWrapper = DomHandler.findSingle(this.el.nativeElement, 'ul.ui-galleria-panel-wrapper');\n        this.initialized = true;\n        \n        if(this.showFilmstrip) {\n            this.stripWrapper = DomHandler.findSingle(this.container,'div.ui-galleria-filmstrip-wrapper');\n            this.strip = DomHandler.findSingle(this.stripWrapper,'ul.ui-galleria-filmstrip');\n        }\n        \n        if(this.images && this.images.length) {\n            this.render();\n        } \n    }\n    \n    render() {\n        this.panels = DomHandler.find(this.panelWrapper, 'li.ui-galleria-panel'); \n        \n        if(this.showFilmstrip) {\n            this.frames = DomHandler.find(this.strip,'li.ui-galleria-frame');\n            this.stripWrapper.style.width = DomHandler.width(this.panelWrapper) - 50 + 'px';\n            this.stripWrapper.style.height = this.frameHeight + 'px';\n        }\n        \n        if(this.showCaption) {\n            this.caption = DomHandler.findSingle(this.container,'div.ui-galleria-caption');\n            this.caption.style.bottom = this.showFilmstrip ? DomHandler.getOuterHeight(this.stripWrapper,true) + 'px' : 0 + 'px';\n            this.caption.style.width = DomHandler.width(this.panelWrapper) + 'px';\n        }\n   \n        if(this.autoPlay) {\n            this.startSlideshow();\n        }\n        \n        this.container.style.visibility = 'visible';\n    }\n    \n    startSlideshow() {\n        this.interval = setInterval(() => {\n            this.next();\n        }, this.transitionInterval);\n        \n        this.slideshowActive = true;\n    }\n        \n    stopSlideshow() {\n        if(this.interval) {\n            clearInterval(this.interval);\n        }\n        \n        this.slideshowActive = false;\n    }\n    \n    clickNavRight() {\n        if(this.slideshowActive) {\n            this.stopSlideshow();\n        }\n        this.next();\n    } \n    \n    clickNavLeft() {\n        if(this.slideshowActive) {\n            this.stopSlideshow();\n        }\n        this.prev();\n    }\n    \n    frameClick(frame) {\n        if(this.slideshowActive) {\n            this.stopSlideshow();\n        }\n        \n        this.select(DomHandler.index(frame), false);\n    }\n    \n    prev() {\n        if(this.activeIndex !== 0) {\n            this.select(this.activeIndex - 1, true);\n        }\n    }\n    \n    next() {\n        if(this.activeIndex !== (this.panels.length-1)) {\n            this.select(this.activeIndex + 1, true);\n        }\n        else {\n            this.select(0, false);\n            this.stripLeft = 0;\n        }\n    }\n        \n    select(index, reposition) {\n        if(index !== this.activeIndex) {            \n            let oldPanel = this.panels[this.activeIndex],\n            newPanel = this.panels[index];\n            \n            DomHandler.fadeIn(newPanel, this.effectDuration);\n            \n            if(this.showFilmstrip) {\n                let oldFrame = this.frames[this.activeIndex],\n                newFrame = this.frames[index];\n                \n                if(reposition === undefined || reposition === true) {\n                    let frameLeft = newFrame.offsetLeft,\n                    stepFactor = this.frameWidth + parseInt(getComputedStyle(newFrame)['margin-right'], 10),\n                    stripLeft = this.strip.offsetLeft,\n                    frameViewportLeft = frameLeft + stripLeft,\n                    frameViewportRight = frameViewportLeft + this.frameWidth;\n                    \n                    if(frameViewportRight > DomHandler.width(this.stripWrapper))\n                        this.stripLeft -= stepFactor;\n                    else if(frameViewportLeft < 0)\n                        this.stripLeft += stepFactor;\n                }\n            }\n            \n            this.activeIndex = index;\n\n            this.onImageChange.emit({index: index});\n        }\n    }\n    \n    clickImage(event, image, i) {\n        this.onImageClicked.emit({originalEvent: event, image: image, index: i})\n    }\n        \n    ngOnDestroy() {\n        this.stopSlideshow();\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Galleria],\n    declarations: [Galleria]\n})\nexport class GalleriaModule { }"]}