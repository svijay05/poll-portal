{"version":3,"sources":["ng://primeng/blockui/blockui.ts"],"names":["BlockUI","el","this","autoZIndex","baseZIndex","Object","defineProperty","prototype","_blocked","val","mask","nativeElement","block","unblock","ngAfterViewInit","target","getBlockableElement","appendChild","style","position","document","body","zIndex","String","DomHandler","zindex","ngOnDestroy","ElementRef","__decorate","Input","ViewChild","static","Component","selector","template","BlockUIModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"+vBAAAA,EAAA,WAwBI,SAAAA,EAAmBC,GAAAC,KAAAD,GAAAA,EARVC,KAAAC,YAAsB,EAEtBD,KAAAE,WAAqB,EAoDlC,OA5CaC,OAAAC,eAAIN,EAAAO,UAAA,UAAO,KAAX,WACL,OAAOL,KAAKM,cAGhB,SAAYC,GACRP,KAAKM,SAAWC,EAEZP,KAAKQ,MAAQR,KAAKQ,KAAKC,gBACnBT,KAAKM,SACLN,KAAKU,QAELV,KAAKW,4CAIjBb,EAAAO,UAAAO,gBAAA,WACI,GAAIZ,KAAKa,SAAWb,KAAKa,OAAOC,oBAC5B,KAAM,0DAIdhB,EAAAO,UAAAK,MAAA,WACI,GAAIV,KAAKa,OAAQ,CACbb,KAAKa,OAAOC,sBAAsBC,YAAYf,KAAKQ,KAAKC,eACxD,IAAIO,EAAQhB,KAAKa,OAAOG,OAAO,GAC/BA,EAAMC,SAAW,WACjBjB,KAAKa,OAAOG,MAAQA,OAGpBE,SAASC,KAAKJ,YAAYf,KAAKQ,KAAKC,eAGpCT,KAAKC,aACLD,KAAKQ,KAAKC,cAAcO,MAAMI,OAASC,OAAOrB,KAAKE,cAAgBoB,EAAAA,WAAWC,UAItFzB,EAAAO,UAAAM,QAAA,WACIX,KAAKD,GAAGU,cAAcM,YAAYf,KAAKQ,KAAKC,gBAGhDX,EAAAO,UAAAmB,YAAA,WACIxB,KAAKW,oDA5Ccc,EAAAA,cAVdC,EAAA,CAARC,EAAAA,sCAEQD,EAAA,CAARC,EAAAA,0CAEQD,EAAA,CAARC,EAAAA,0CAEoCD,EAAA,CAApCE,EAAAA,UAAU,OAAQ,CAAEC,QAAQ,gCAMpBH,EAAA,CAARC,EAAAA,qCAdQ7B,EAAO4B,EAAA,CARnBI,EAAAA,UAAU,CACPC,SAAU,YACVC,SAAU,iOAMDlC,GAZb,gBA6EA,SAAAmC,KAA6B,OAAhBA,EAAaP,EAAA,CALzBQ,EAAAA,SAAS,CACNC,QAAS,CAACC,EAAAA,cACVC,QAAS,CAACvC,GACVwC,aAAc,CAACxC,MAENmC","sourcesContent":["import {NgModule,Component,Input,AfterViewInit,OnDestroy,ElementRef,ViewChild} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\n\n@Component({\n    selector: 'p-blockUI',\n    template: `\n        <div #mask class=\"ui-blockui ui-widget-overlay\" [ngClass]=\"{'ui-blockui-document':!target}\" [ngStyle]=\"{display: blocked ? 'block' : 'none'}\">\n            <ng-content></ng-content>\n        </div>\n    `\n})\nexport class BlockUI implements AfterViewInit,OnDestroy {\n\n    @Input() target: any;\n    \n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n    \n    @ViewChild('mask', { static: true }) mask: ElementRef;\n    \n    _blocked: boolean;\n        \n    constructor(public el: ElementRef) {}\n    \n    @Input() get blocked(): boolean {\n        return this._blocked;\n    }\n    \n    set blocked(val: boolean) {\n        this._blocked = val;\n        \n        if (this.mask && this.mask.nativeElement) {\n            if (this._blocked)\n                this.block();\n            else\n                this.unblock();\n        }\n    }\n    \n    ngAfterViewInit() {\n        if (this.target && !this.target.getBlockableElement) {\n            throw 'Target of BlockUI must implement BlockableUI interface';\n        }\n    }\n        \n    block() {\n        if (this.target) {\n            this.target.getBlockableElement().appendChild(this.mask.nativeElement);\n            let style = this.target.style||{};\n            style.position = 'relative';\n            this.target.style = style;\n        }\n        else {\n            document.body.appendChild(this.mask.nativeElement);\n        }\n        \n        if (this.autoZIndex) {\n            this.mask.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n    \n    unblock() {\n        this.el.nativeElement.appendChild(this.mask.nativeElement);\n    }\n    \n    ngOnDestroy() {\n        this.unblock();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [BlockUI],\n    declarations: [BlockUI]\n})\nexport class BlockUIModule { }"]}