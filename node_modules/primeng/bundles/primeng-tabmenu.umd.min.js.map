{"version":3,"sources":["ng://primeng/tabmenu/tabmenu.ts"],"names":["TabMenu","prototype","ngAfterContentInit","_this","this","templates","forEach","item","getType","itemTemplate","template","itemClick","event","disabled","preventDefault","url","command","originalEvent","activeItem","__decorate","Input","ContentChildren","PrimeTemplate","Component","selector","TabMenuModule","NgModule","imports","CommonModule","RouterModule","SharedModule","exports","declarations"],"mappings":"0zBAAAA,EAAA,WAoCA,SAAAA,KAiDA,OAjCIA,EAAAC,UAAAC,mBAAA,WAAA,IAAAC,EAAAC,KACIA,KAAKC,UAAUC,SAAQ,SAACC,GACpB,OAAOA,EAAKC,WACR,IAAK,OAIL,QACIL,EAAKM,aAAeF,EAAKG,cAMzCV,EAAAC,UAAAU,UAAA,SAAUC,EAAcL,GACjBA,EAAKM,SACJD,EAAME,kBAINP,EAAKQ,KACLH,EAAME,iBAGPP,EAAKS,SACJT,EAAKS,QAAQ,CACTC,cAAeL,EACfL,KAAMA,IAIdH,KAAKc,WAAaX,IA7CbY,EAAA,CAARC,EAAAA,qCAEQD,EAAA,CAARC,EAAAA,0CAEQD,EAAA,CAARC,EAAAA,qCAEQD,EAAA,CAARC,EAAAA,qCAEQD,EAAA,CAARC,EAAAA,0CAE+BD,EAAA,CAA/BE,EAAAA,gBAAgBC,EAAAA,gDAZRtB,EAAOmB,EAAA,CA9BnBI,EAAAA,UAAU,CACPC,SAAU,YACVd,SAAU,q5EA4BDV,GApCb,gBA4FA,SAAAyB,KAA6B,OAAhBA,EAAaN,EAAA,CALzBO,EAAAA,SAAS,CACNC,QAAS,CAACC,EAAAA,aAAaC,EAAAA,aAAaC,EAAAA,cACpCC,QAAS,CAAC/B,EAAQ6B,EAAAA,aAAaC,EAAAA,cAC/BE,aAAc,CAAChC,MAENyB","sourcesContent":["import {NgModule,Component,Input,ContentChildren,QueryList,AfterContentInit,TemplateRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {MenuItem} from 'primeng/api';\nimport {PrimeTemplate, SharedModule} from 'primeng/api';\nimport {RouterModule} from '@angular/router';\n\n@Component({\n    selector: 'p-tabMenu',\n    template: `\n        <div [ngClass]=\"'ui-tabmenu ui-widget ui-widget-content ui-corner-all'\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <ul class=\"ui-tabmenu-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all\" role=\"tablist\">\n                <li *ngFor=\"let item of model; let i = index\" role=\"tab\" [attr.aria-selected]=\"activeItem==item\" [attr.aria-expanded]=\"activeItem==item\"\n                    [ngClass]=\"{'ui-tabmenuitem ui-state-default ui-corner-top':true,'ui-state-disabled':item.disabled,\n                        'ui-tabmenuitem-hasicon':item.icon,'ui-state-active':activeItem==item,'ui-helper-hidden': item.visible === false}\"\n                        [routerLinkActive]=\"'ui-state-active'\" [routerLinkActiveOptions]=\"item.routerLinkActiveOptions||{exact:false}\">\n                    <a *ngIf=\"!item.routerLink\" [href]=\"item.url||'#'\" class=\"ui-menuitem-link ui-corner-all\" role=\"presentation\" (click)=\"itemClick($event,item)\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\"\n                        [attr.target]=\"item.target\" [attr.title]=\"item.title\" [attr.id]=\"item.id\">\n                        <ng-container *ngIf=\"!itemTemplate\">\n                            <span class=\"ui-menuitem-icon \" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span>\n                            <span class=\"ui-menuitem-text\">{{item.label}}</span>\n                        </ng-container>\n                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item, index: i}\"></ng-container>\n                    </a>\n                    <a *ngIf=\"item.routerLink\" [routerLink]=\"item.routerLink\" [queryParams]=\"item.queryParams\" role=\"presentation\" class=\"ui-menuitem-link ui-corner-all\" (click)=\"itemClick($event,item)\" [attr.tabindex]=\"item.tabindex ? item.tabindex : '0'\"\n                        [attr.target]=\"item.target\" [attr.title]=\"item.title\" [attr.id]=\"item.id\">\n                        <ng-container *ngIf=\"!itemTemplate\">\n                            <span class=\"ui-menuitem-icon \" [ngClass]=\"item.icon\" *ngIf=\"item.icon\"></span>\n                            <span class=\"ui-menuitem-text\">{{item.label}}</span>\n                        </ng-container>\n                        <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: item, index: i}\"></ng-container>\n                    </a>\n                </li>\n            </ul>\n        </div>\n    `\n})\nexport class TabMenu implements AfterContentInit {\n\n    @Input() model: MenuItem[];\n\n    @Input() activeItem: MenuItem;\n\n    @Input() popup: boolean;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    itemTemplate: TemplateRef<any>;\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                break;\n                \n                default:\n                    this.itemTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    itemClick(event: Event, item: MenuItem)Â {\n        if(item.disabled) {\n            event.preventDefault();\n            return;\n        }\n\n        if(!item.url) {\n            event.preventDefault();\n        }\n\n        if(item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n\n        this.activeItem = item;\n    }\n}\n\n@NgModule({\n    imports: [CommonModule,RouterModule,SharedModule],\n    exports: [TabMenu,RouterModule,SharedModule],\n    declarations: [TabMenu]\n})\nexport class TabMenuModule { }\n"]}