{"version":3,"sources":["ng://primeng/tooltip/tooltip.ts"],"names":["Tooltip","el","zone","this","tooltipPosition","tooltipEvent","appendTo","tooltipZIndex","escape","prototype","ngAfterViewInit","_this","runOutsideAngular","mouseEnterListener","onMouseEnter","bind","mouseLeaveListener","onMouseLeave","clickListener","onClick","nativeElement","addEventListener","focusListener","onFocus","blurListener","onBlur","e","container","showTimeout","activate","deactivate","active","clearHideTimeout","showDelay","setTimeout","show","life","duration","hideTimeout","hide","clearShowTimeout","hideDelay","Object","defineProperty","_text","text","offsetParent","updateText","align","create","document","createElement","tooltipArrow","className","appendChild","tooltipText","positionStyle","style","position","body","DomHandler","display","disabled","fadeIn","zIndex","zindex","bindDocumentResizeListener","remove","innerHTML","createTextNode","alignTop","isOutOfBounds","alignBottom","alignRight","alignLeft","getHostOffset","offset","getBoundingClientRect","left","getWindowScrollLeft","top","getWindowScrollTop","preAlign","hostOffset","getOuterWidth","getOuterHeight","defaultClassName","tooltipStyleClass","targetTop","targetLeft","width","height","viewport","getViewport","onWindowResize","resizeListener","window","unbindDocumentResizeListener","removeEventListener","unbindEvents","parentElement","removeChild","clearTimeouts","clearTimeout","ngOnDestroy","ElementRef","NgZone","__decorate","Input","Directive","selector","TooltipModule","NgModule","imports","CommonModule","exports","declarations"],"mappings":"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","sourcesContent":["import { NgModule, Directive, ElementRef, AfterViewInit, OnDestroy, Input, NgZone } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\n\n@Directive({\n    selector: '[pTooltip]'\n})\nexport class Tooltip implements AfterViewInit, OnDestroy {\n\n    @Input() tooltipPosition: string = 'right';\n\n    @Input() tooltipEvent: string = 'hover';\n\n    @Input() appendTo: any = 'body';\n\n    @Input() positionStyle: string;\n\n    @Input() tooltipStyleClass: string;\n\n    @Input() tooltipZIndex: string = 'auto';\n\n    @Input(\"tooltipDisabled\") disabled: boolean;\n\n    @Input() escape: boolean = true;\n\n    @Input() showDelay: number;\n\n    @Input() hideDelay: number;\n\n    @Input() life: number;\n\n    container: any;\n\n    styleClass: string;\n\n    tooltipText: any;\n\n    showTimeout: any;\n\n    hideTimeout: any;\n\n    active: boolean;\n\n    _text: string;\n\n    mouseEnterListener: Function;\n\n    mouseLeaveListener: Function;\n\n    clickListener: Function;\n\n    focusListener: Function;\n\n    blurListener: Function;\n\n    resizeListener: any;\n\n    constructor(public el: ElementRef, public zone: NgZone) { }\n\n    ngAfterViewInit() {\n        this.zone.runOutsideAngular(() => {\n            if (this.tooltipEvent === 'hover') {\n                this.mouseEnterListener = this.onMouseEnter.bind(this);\n                this.mouseLeaveListener = this.onMouseLeave.bind(this);\n                this.clickListener = this.onClick.bind(this);\n                this.el.nativeElement.addEventListener('mouseenter', this.mouseEnterListener);\n                this.el.nativeElement.addEventListener('mouseleave', this.mouseLeaveListener);\n                this.el.nativeElement.addEventListener('click', this.clickListener);\n            }\n            else if (this.tooltipEvent === 'focus') {\n                this.focusListener = this.onFocus.bind(this);\n                this.blurListener = this.onBlur.bind(this);\n                this.el.nativeElement.addEventListener('focus', this.focusListener);\n                this.el.nativeElement.addEventListener('blur', this.blurListener);\n            }\n        });\n    }\n\n    onMouseEnter(e: Event) {\n        if (!this.container && !this.showTimeout) {\n            this.activate();\n        }\n    }\n    \n    onMouseLeave(e: Event) {\n        this.deactivate();\n    }\n    \n    onFocus(e: Event) {\n        this.activate();\n    }\n    \n    onBlur(e: Event) {\n        this.deactivate();\n    }\n  \n    onClick(e: Event) {\n        this.deactivate();\n    }\n\n    activate() {\n        this.active = true;\n        this.clearHideTimeout();\n\n        if (this.showDelay)\n            this.showTimeout = setTimeout(() => { this.show() }, this.showDelay);\n        else\n            this.show();\n\n        if (this.life) {\n            let duration = this.showDelay ? this.life + this.showDelay : this.life;\n            this.hideTimeout = setTimeout(() => { this.hide() }, duration);\n        }\n    }\n\n    deactivate() {\n        this.active = false;\n        this.clearShowTimeout();\n\n        if (this.hideDelay) {\n            this.clearHideTimeout();    //life timeout\n            this.hideTimeout = setTimeout(() => { this.hide() }, this.hideDelay);\n        }\n        else {\n            this.hide();\n        }\n    }\n\n    get text(): string {\n        return this._text;\n    }\n\n    @Input('pTooltip') set text(text: string) {\n        this._text = text;\n        if (this.active) {\n            if (this._text) {\n                if (this.container && this.container.offsetParent) {\n                    this.updateText();\n\t\t\t\t\tthis.align();\n\t\t\t\t}\n                else {\n                    this.show();\n                }\n            }\n            else {\n                this.hide();\n            }\n        }\n    }\n\n    create() {\n        this.container = document.createElement('div');\n\n        let tooltipArrow = document.createElement('div');\n        tooltipArrow.className = 'ui-tooltip-arrow';\n        this.container.appendChild(tooltipArrow);\n\n        this.tooltipText = document.createElement('div');\n        this.tooltipText.className = 'ui-tooltip-text ui-shadow ui-corner-all';\n\n        this.updateText();\n\n        if (this.positionStyle) {\n            this.container.style.position = this.positionStyle;\n        }\n\n        this.container.appendChild(this.tooltipText);\n\n        if (this.appendTo === 'body')\n            document.body.appendChild(this.container);\n        else if (this.appendTo === 'target')\n            DomHandler.appendChild(this.container, this.el.nativeElement);\n        else\n            DomHandler.appendChild(this.container, this.appendTo);\n\n        this.container.style.display = 'inline-block';\n    }\n\n    show() {\n        if (!this.text || this.disabled) {\n            return;\n        }\n\n        this.create();\n        this.align();\n        DomHandler.fadeIn(this.container, 250);\n\n        if (this.tooltipZIndex === 'auto')\n            this.container.style.zIndex = ++DomHandler.zindex;\n        else\n            this.container.style.zIndex = this.tooltipZIndex;\n\n        this.bindDocumentResizeListener();\n    }\n\n    hide() {\n        this.remove();\n    }\n\n    updateText() {\n        if (this.escape) {\n            this.tooltipText.innerHTML = '';\n            this.tooltipText.appendChild(document.createTextNode(this._text));\n        }\n        else {\n            this.tooltipText.innerHTML = this._text;\n        }\n    }\n\n    align() {\n        let position = this.tooltipPosition;\n\n        switch (position) {\n            case 'top':\n                this.alignTop();\n                if (this.isOutOfBounds()) {\n                    this.alignBottom();\n                    if (this.isOutOfBounds()) {\n                        this.alignRight();\n\n                        if (this.isOutOfBounds()) {\n                            this.alignLeft();\n                        }\n                    }\n                }\n                break;\n\n            case 'bottom':\n                this.alignBottom();\n                if (this.isOutOfBounds()) {\n                    this.alignTop();\n                    if (this.isOutOfBounds()) {\n                        this.alignRight();\n\n                        if (this.isOutOfBounds()) {\n                            this.alignLeft();\n                        }\n                    }\n                }\n                break;\n\n            case 'left':\n                this.alignLeft();\n                if (this.isOutOfBounds()) {\n                    this.alignRight();\n\n                    if (this.isOutOfBounds()) {\n                        this.alignTop();\n\n                        if (this.isOutOfBounds()) {\n                            this.alignBottom();\n                        }\n                    }\n                }\n                break;\n\n            case 'right':\n                this.alignRight();\n                if (this.isOutOfBounds()) {\n                    this.alignLeft();\n\n                    if (this.isOutOfBounds()) {\n                        this.alignTop();\n\n                        if (this.isOutOfBounds()) {\n                            this.alignBottom();\n                        }\n                    }\n                }\n                break;\n        }\n    }\n\n    getHostOffset() {\n        if(this.appendTo === 'body' || this.appendTo === 'target') {\n            let offset = this.el.nativeElement.getBoundingClientRect();\n            let targetLeft = offset.left + DomHandler.getWindowScrollLeft();\n            let targetTop = offset.top + DomHandler.getWindowScrollTop();\n    \n            return { left: targetLeft, top: targetTop };\n        }\n        else {\n            return { left: 0, top: 0 };\n        }\n    }\n\n    alignRight() {\n        this.preAlign('right');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left + DomHandler.getOuterWidth(this.el.nativeElement);\n        let top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n        this.container.style.left = left + 'px';\n        this.container.style.top = top + 'px';\n    }\n\n    alignLeft() {\n        this.preAlign('left');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left - DomHandler.getOuterWidth(this.container);\n        let top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n        this.container.style.left = left + 'px';\n        this.container.style.top = top + 'px';\n    }\n\n    alignTop() {\n        this.preAlign('top');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n        let top = hostOffset.top - DomHandler.getOuterHeight(this.container);\n        this.container.style.left = left + 'px';\n        this.container.style.top = top + 'px';\n    }\n\n    alignBottom() {\n        this.preAlign('bottom');\n        let hostOffset = this.getHostOffset();\n        let left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n        let top = hostOffset.top + DomHandler.getOuterHeight(this.el.nativeElement);\n        this.container.style.left = left + 'px';\n        this.container.style.top = top + 'px';\n    }\n\n    preAlign(position: string) {\n        this.container.style.left = -999 + 'px';\n        this.container.style.top = -999 + 'px';\n\n        let defaultClassName = 'ui-tooltip ui-widget ui-tooltip-' + position;\n        this.container.className = this.tooltipStyleClass ? defaultClassName + ' ' + this.tooltipStyleClass : defaultClassName;\n    }\n\n    isOutOfBounds(): boolean {\n        let offset = this.container.getBoundingClientRect();\n        let targetTop = offset.top;\n        let targetLeft = offset.left;\n        let width = DomHandler.getOuterWidth(this.container);\n        let height = DomHandler.getOuterHeight(this.container);\n        let viewport = DomHandler.getViewport();\n\n        return (targetLeft + width > viewport.width) || (targetLeft < 0) || (targetTop < 0) || (targetTop + height > viewport.height);\n    }\n\n    onWindowResize(e: Event) {\n        this.hide();\n    }\n\n    bindDocumentResizeListener() {\n        this.zone.runOutsideAngular(() => {\n            this.resizeListener = this.onWindowResize.bind(this);\n            window.addEventListener('resize', this.resizeListener);\n        });\n    }\n\n    unbindDocumentResizeListener() {\n        if (this.resizeListener) {\n            window.removeEventListener('resize', this.resizeListener);\n            this.resizeListener = null;\n        }\n    }\n\n    unbindEvents() {\n        if (this.tooltipEvent === 'hover') {\n            this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);\n            this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);\n            this.el.nativeElement.removeEventListener('click', this.clickListener);\n        }\n        else if (this.tooltipEvent === 'focus') {\n            this.el.nativeElement.removeEventListener('focus', this.focusListener);\n            this.el.nativeElement.removeEventListener('blur', this.blurListener);\n        }\n\n        this.unbindDocumentResizeListener();\n    }\n\n    remove() {\n        if (this.container && this.container.parentElement) {\n            if (this.appendTo === 'body')\n                document.body.removeChild(this.container);\n            else if (this.appendTo === 'target')\n                this.el.nativeElement.removeChild(this.container);\n            else\n                DomHandler.removeChild(this.container, this.appendTo);\n        }\n\n        this.unbindDocumentResizeListener();\n        this.clearTimeouts();\n        this.container = null;\n    }\n\n    clearShowTimeout() {\n        if (this.showTimeout) {\n            clearTimeout(this.showTimeout);\n            this.showTimeout = null;\n        }\n    }\n\n    clearHideTimeout() {\n        if (this.hideTimeout) {\n            clearTimeout(this.hideTimeout);\n            this.hideTimeout = null;\n        }\n    }\n\n    clearTimeouts() {\n        this.clearShowTimeout();\n        this.clearHideTimeout();\n    }\n\n    ngOnDestroy() {\n        this.unbindEvents();\n        this.remove();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Tooltip],\n    declarations: [Tooltip]\n})\nexport class TooltipModule { }\n"]}