{"version":3,"sources":["ng://primeng/toast/toast.ts"],"names":["ToastItem","this","onClose","EventEmitter","prototype","ngAfterViewInit","initTimeout","_this","message","sticky","timeout","setTimeout","emit","index","life","clearTimeout","onMouseEnter","onMouseLeave","onCloseIconClick","event","preventDefault","ngOnDestroy","__decorate","Input","Output","ViewChild","static","Component","selector","template","animations","trigger","state","style","transform","opacity","transition","animate","height","Toast","messageService","autoZIndex","baseZIndex","position","showTransitionOptions","hideTransitionOptions","ngOnInit","messageSubscription","messageObserver","subscribe","messages","Array","filteredMessages","filter","m","key","__spread","modal","length","enableModality","clearSubscription","clearObserver","disableModality","ngAfterContentInit","templates","forEach","item","getType","onMessageClose","splice","mask","document","createElement","zIndex","String","parseInt","containerViewChild","nativeElement","DomHandler","addMultipleClasses","body","appendChild","removeChild","onAnimationStart","fromState","zindex","unsubscribe","MessageService","ContentChildren","PrimeTemplate","query","animateChild","ToastModule","NgModule","imports","CommonModule","exports","SharedModule","declarations"],"mappings":"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","sourcesContent":["import {NgModule,Component,Input,Output,OnInit,AfterViewInit,AfterContentInit,OnDestroy,ElementRef,ViewChild,EventEmitter,ContentChildren,QueryList,TemplateRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {Message} from 'primeng/api';\nimport {DomHandler} from 'primeng/dom';\nimport {PrimeTemplate,SharedModule} from 'primeng/api';\nimport {MessageService} from 'primeng/api';\nimport {Subscription} from 'rxjs';\nimport {trigger,state,style,transition,animate,query,animateChild,AnimationEvent} from '@angular/animations';\n\n@Component({\n    selector: 'p-toastItem',\n    template: `\n        <div #container class=\"ui-toast-message ui-shadow\" [@messageState]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\"\n            [ngClass]=\"{'ui-toast-message-info': message.severity == 'info','ui-toast-message-warn': message.severity == 'warn',\n                'ui-toast-message-error': message.severity == 'error','ui-toast-message-success': message.severity == 'success'}\"\n                (mouseenter)=\"onMouseEnter()\" (mouseleave)=\"onMouseLeave()\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n            <div class=\"ui-toast-message-content\">\n                <a tabindex=\"0\" class=\"ui-toast-close-icon pi pi-times\" (click)=\"onCloseIconClick($event)\" (keydown.enter)=\"onCloseIconClick($event)\" *ngIf=\"message.closable !== false\"></a>\n                <ng-container *ngIf=\"!template\">\n                    <span class=\"ui-toast-icon pi\"\n                        [ngClass]=\"{'pi-info-circle': message.severity == 'info', 'pi-exclamation-triangle': message.severity == 'warn',\n                            'pi-times': message.severity == 'error', 'pi-check' :message.severity == 'success'}\"></span>\n                    <div class=\"ui-toast-message-text-content\">\n                        <div class=\"ui-toast-summary\">{{message.summary}}</div>\n                        <div class=\"ui-toast-detail\">{{message.detail}}</div>\n                    </div>\n                </ng-container>\n                <ng-container *ngTemplateOutlet=\"template; context: {$implicit: message}\"></ng-container>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('messageState', [\n            state('visible', style({\n                transform: 'translateY(0)',\n                opacity: 1\n            })),\n            transition('void => *', [\n                style({transform: 'translateY(100%)', opacity: 0}),\n                animate('{{showTransitionParams}}')\n            ]),\n            transition('* => void', [\n                animate(('{{hideTransitionParams}}'), style({\n                    height: 0,\n                    opacity: 0,\n                    transform: 'translateY(-100%)'\n                }))\n            ])\n        ])\n    ]\n})\nexport class ToastItem implements AfterViewInit, OnDestroy {\n\n    @Input() message: Message;\n\n    @Input() index: number;\n\n    @Input() template: TemplateRef<any>;\n\n    @Input() showTransitionOptions: string;\n\n    @Input() hideTransitionOptions: string;\n\n    @Output() onClose: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('container', { static: true }) containerViewChild: ElementRef;\n\n    timeout: any;\n\n    ngAfterViewInit() {\n        this.initTimeout();\n    }\n\n    initTimeout() {\n        if (!this.message.sticky) {\n            this.timeout = setTimeout(() => {\n                this.onClose.emit({\n                    index: this.index,\n                    message: this.message\n                });\n            }, this.message.life || 3000);\n        }\n    }\n\n    clearTimeout() {\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n            this.timeout = null;\n        }\n    }\n    \n    onMouseEnter() {\n        this.clearTimeout();\n    }\n\n    onMouseLeave() {\n        this.initTimeout();\n    }\n \n    onCloseIconClick(event) {\n        this.clearTimeout();\n        \n        this.onClose.emit({\n            index: this.index,\n            message: this.message\n        });\n\n        event.preventDefault();\n    }\n\n    ngOnDestroy() {\n        this.clearTimeout();\n    }\n}\n\n@Component({\n    selector: 'p-toast',\n    template: `\n        <div #container [ngClass]=\"{'ui-toast ui-widget': true, \n                'ui-toast-top-right': position === 'top-right',\n                'ui-toast-top-left': position === 'top-left',\n                'ui-toast-bottom-right': position === 'bottom-right',\n                'ui-toast-bottom-left': position === 'bottom-left',\n                'ui-toast-top-center': position === 'top-center',\n                'ui-toast-bottom-center': position === 'bottom-center',\n                'ui-toast-center': position === 'center'}\" \n                [ngStyle]=\"style\" [class]=\"styleClass\">\n            <p-toastItem *ngFor=\"let msg of messages; let i=index\" [message]=\"msg\" [index]=\"i\" (onClose)=\"onMessageClose($event)\"\n                    [template]=\"template\" @toastAnimation (@toastAnimation.start)=\"onAnimationStart($event)\" [showTransitionOptions]=\"showTransitionOptions\" [hideTransitionOptions]=\"hideTransitionOptions\"></p-toastItem>\n        </div>\n    `,\n    animations: [\n        trigger('toastAnimation', [\n            transition(':enter, :leave', [\n                query('@*', animateChild())\n            ])\n        ])\n    ]\n})\nexport class Toast implements OnInit,AfterContentInit,OnDestroy {\n\n    @Input() key: string;\n\n    @Input() autoZIndex: boolean = true;\n    \n    @Input() baseZIndex: number = 0;\n\n    @Input() style: any;\n        \n    @Input() styleClass: string;\n\n    @Input() position: string = 'top-right';\n\n    @Input() modal: boolean;\n    \n    @Input() showTransitionOptions: string = '300ms ease-out';\n\n    @Input() hideTransitionOptions: string = '250ms ease-in';\n\n    @Output() onClose: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('container', { static: true }) containerViewChild: ElementRef;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    messageSubscription: Subscription;\n\n    clearSubscription: Subscription;\n\n    messages: Message[];\n\n    template: TemplateRef<any>;\n\n    mask: HTMLDivElement;\n    \n    constructor(public messageService: MessageService) {}\n\n    ngOnInit() {\n        this.messageSubscription = this.messageService.messageObserver.subscribe(messages => {\n            if (messages) {\n                if (messages instanceof Array) {\n                    let filteredMessages = messages.filter(m => this.key === m.key);\n                    this.messages = this.messages ? [...this.messages, ...filteredMessages] : [...filteredMessages];\n                }\n                else if (this.key === messages.key) {\n                    this.messages = this.messages ? [...this.messages, ...[messages]] : [messages];\n                }\n\n                if (this.modal && this.messages && this.messages.length) {\n                    this.enableModality();\n                }\n            }\n        });\n\n        this.clearSubscription = this.messageService.clearObserver.subscribe(key => {\n            if (key) {\n                if (this.key === key) {\n                    this.messages = null;\n                }\n            }\n            else {\n                this.messages = null;\n            }\n\n            if (this.modal) {\n                this.disableModality();\n            }\n        });       \n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'message':\n                    this.template = item.template;\n                break;\n\n                default:\n                    this.template = item.template;\n                break;\n            }\n        });\n    }\n\n    onMessageClose(event) {\n        this.messages.splice(event.index, 1);\n\n        if (this.messages.length === 0) {\n            this.disableModality();\n        }\n\n        this.onClose.emit({\n            message: event.message\n        });\n    }\n\n    enableModality() {\n        if (!this.mask) {\n            this.mask = document.createElement('div');\n            this.mask.style.zIndex = String(parseInt(this.containerViewChild.nativeElement.style.zIndex) - 1);\n            let maskStyleClass = 'ui-widget-overlay ui-dialog-mask';\n            DomHandler.addMultipleClasses(this.mask, maskStyleClass);\n            document.body.appendChild(this.mask);\n        }\n    }\n    \n    disableModality() {\n        if (this.mask) {\n            document.body.removeChild(this.mask);\n            this.mask = null;\n        }\n    }\n\n    onAnimationStart(event: AnimationEvent) {\n        if (event.fromState === 'void' && this.autoZIndex) {\n            this.containerViewChild.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n\n    ngOnDestroy() {        \n        if (this.messageSubscription) {\n            this.messageSubscription.unsubscribe();\n        }\n        \n        if (this.clearSubscription) {\n            this.clearSubscription.unsubscribe();\n        }\n\n        this.disableModality();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Toast,SharedModule],\n    declarations: [Toast,ToastItem]\n})\nexport class ToastModule { }"]}