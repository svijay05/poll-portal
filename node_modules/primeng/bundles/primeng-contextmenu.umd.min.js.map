{"version":3,"sources":["ng://primeng/contextmenu/contextmenu.ts"],"names":["ContextMenuSub","contextMenu","this","Object","defineProperty","prototype","_parentActive","value","activeItem","onItemMouseEnter","event","item","menuitem","hideTimeout","clearTimeout","disabled","nextElement","children","nextElementSibling","sublist","style","zIndex","DomHandler","zindex","position","itemClick","preventDefault","url","command","originalEvent","listClick","containerOffset","getOffset","parentElement","viewport","getViewport","sublistWidth","offsetParent","offsetWidth","getHiddenElementOuterWidth","itemOuterWidth","getOuterWidth","itemOuterHeight","getOuterHeight","sublistHeight","offsetHeight","getHiddenElementOuterHeight","parseInt","top","height","calculateScrollbarHeight","bottom","left","width","calculateScrollbarWidth","Inject","args","forwardRef","ContextMenu","__decorate","Input","Component","selector","template","__param","el","renderer","zone","autoZIndex","baseZIndex","triggerEvent","onShow","EventEmitter","onHide","ngAfterViewInit","_this","global","triggerEventListener","listen","show","target","stopPropagation","appendTo","document","body","appendChild","containerViewChild","nativeElement","moveOnTop","display","parentActive","fadeIn","bindGlobalListeners","emit","hide","unbindGlobalListeners","String","toggle","pageX","top_1","pageY","scrollLeft","scrollTop","documentClickListener","button","runOutsideAngular","windowResizeListener","onWindowResize","bind","window","addEventListener","removeEventListener","ngOnDestroy","ElementRef","Renderer2","NgZone","Output","ViewChild","static","ContextMenuModule","NgModule","imports","CommonModule","RouterModule","exports","declarations"],"mappings":"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","sourcesContent":["import { NgModule,Component,ElementRef,AfterViewInit,OnDestroy,Input,Output,Renderer2,Inject,forwardRef,ViewChild,NgZone,EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DomHandler } from 'primeng/dom';\nimport { MenuItem } from 'primeng/api';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n    selector: 'p-contextMenuSub',\n    template: `\n        <ul [ngClass]=\"{'ui-widget-content ui-corner-all ui-submenu-list ui-shadow':!root}\" class=\"ui-menu-list\" (click)=\"listClick($event)\">\n            <ng-template ngFor let-child [ngForOf]=\"(root ? item : item.items)\">\n                <li *ngIf=\"child.separator\" class=\"ui-menu-separator ui-widget-content\" [ngClass]=\"{'ui-helper-hidden': child.visible === false}\" role=\"separator\">\n                <li *ngIf=\"!child.separator\" #item [ngClass]=\"{'ui-menuitem ui-corner-all':true,'ui-menuitem-active':item==activeItem,'ui-helper-hidden': child.visible === false}\"\n                    (mouseenter)=\"onItemMouseEnter($event,item,child)\" role=\"none\">\n                    <a *ngIf=\"!child.routerLink\" [href]=\"child.url||'#'\" [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" [attr.tabindex]=\"child.tabindex ? child.tabindex : '0'\" (click)=\"itemClick($event, child)\"\n                        [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':child.disabled}\" [ngStyle]=\"child.style\" [class]=\"child.styleClass\"\n                        [attr.aria-haspopup]=\"item.items != null\" [attr.aria-expanded]=\"item === activeItem\">\n                        <span class=\"ui-submenu-icon pi pi-fw pi-caret-right\" *ngIf=\"child.items\"></span>\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\n                    </a>\n                    <a *ngIf=\"child.routerLink\" [routerLink]=\"child.routerLink\" [queryParams]=\"child.queryParams\" [routerLinkActive]=\"'ui-state-active'\" role=\"menuitem\"\n                        [routerLinkActiveOptions]=\"child.routerLinkActiveOptions||{exact:false}\" [attr.target]=\"child.target\" [attr.title]=\"child.title\" [attr.id]=\"child.id\" [attr.tabindex]=\"child.tabindex ? child.tabindex : '0'\"\n                        (click)=\"itemClick($event, child)\" [ngClass]=\"{'ui-menuitem-link ui-corner-all':true,'ui-state-disabled':child.disabled}\"\n                        [ngStyle]=\"child.style\" [class]=\"child.styleClass\">\n                        <span class=\"ui-submenu-icon pi pi-fw pi-caret-right\" *ngIf=\"child.items\"></span>\n                        <span class=\"ui-menuitem-icon\" *ngIf=\"child.icon\" [ngClass]=\"child.icon\"></span>\n                        <span class=\"ui-menuitem-text\">{{child.label}}</span>\n                    </a>\n                    <p-contextMenuSub class=\"ui-submenu\" [parentActive]=\"item==activeItem\" [item]=\"child\" *ngIf=\"child.items\"></p-contextMenuSub>\n                </li>\n            </ng-template>\n        </ul>\n    `\n})\nexport class ContextMenuSub {\n\n    @Input() item: MenuItem;\n\n    @Input() root: boolean;\n\n    @Input() get parentActive(): boolean {\n        return this._parentActive;\n    }\n    set parentActive(value) {\n        this._parentActive = value;\n        if (!value) {\n            this.activeItem = null;\n        }\n    }\n\n    contextMenu: ContextMenu;\n\n    constructor(@Inject(forwardRef(() => ContextMenu)) contextMenu) {\n        this.contextMenu = contextMenu as ContextMenu;\n    }\n\n    activeItem: any;\n\n    containerOffset: any;\n\n    hideTimeout: any;\n\n    _parentActive: boolean;\n\n    onItemMouseEnter(event, item, menuitem) {\n        if (this.hideTimeout) {\n            clearTimeout(this.hideTimeout);\n            this.hideTimeout = null;\n        }\n\n        this.activeItem = item;\n\n        if (menuitem.disabled) {\n            return;\n        }        \n        \n        let nextElement = item.children[0].nextElementSibling;\n        if (nextElement) {\n            let sublist = nextElement.children[0];\n            sublist.style.zIndex = ++DomHandler.zindex;\n            this.position(sublist, item);\n        }\n    }\n\n\n    itemClick(event, item: MenuItem) Â {\n        if (item.disabled) {\n            event.preventDefault();\n            return;\n        }\n\n        if (!item.url) {\n            event.preventDefault();\n        }\n\n        if (item.command) {\n            item.command({\n                originalEvent: event,\n                item: item\n            });\n        }\n    }\n\n    listClick(event) {\n        this.activeItem = null;\n    }\n\n    position(sublist, item) {\n        this.containerOffset = DomHandler.getOffset(item.parentElement)\n        let viewport = DomHandler.getViewport();\n        let sublistWidth = sublist.offsetParent ? sublist.offsetWidth : DomHandler.getHiddenElementOuterWidth(sublist);\n        let itemOuterWidth = DomHandler.getOuterWidth(item.children[0]);\n        let itemOuterHeight = DomHandler.getOuterHeight(item.children[0]);\n        let sublistHeight = sublist.offsetHeight ? sublist.offsetHeight : DomHandler.getHiddenElementOuterHeight(sublist);\n\n        if ((parseInt(this.containerOffset.top) + itemOuterHeight + sublistHeight) > (viewport.height - DomHandler.calculateScrollbarHeight())) {\n            sublist.style.bottom = '0px';\n        }\n        else {\n            sublist.style.top = '0px';\n        }\n\n        if ((parseInt(this.containerOffset.left) + itemOuterWidth + sublistWidth) > (viewport.width - DomHandler.calculateScrollbarWidth())) {\n            sublist.style.left = -sublistWidth + 'px';\n        }\n        else {\n            sublist.style.left = itemOuterWidth + 'px';\n        }\n    }\n\n}\n\n@Component({\n    selector: 'p-contextMenu',\n    template: `\n        <div #container [ngClass]=\"'ui-contextmenu ui-widget ui-widget-content ui-corner-all ui-shadow'\"\n            [class]=\"styleClass\" [ngStyle]=\"style\">\n            <p-contextMenuSub [item]=\"model\" [parentActive]=\"parentActive\" root=\"root\"></p-contextMenuSub>\n        </div>\n    `\n})\nexport class ContextMenu implements AfterViewInit, OnDestroy {\n\n    @Input() model: MenuItem[];\n\n    @Input() global: boolean;\n\n    @Input() target: any;\n\n    @Input() style: any;\n\n    @Input() styleClass: string;\n\n    @Input() appendTo: any;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() triggerEvent: string = 'contextmenu';\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild('container', { static: true }) containerViewChild: ElementRef;\n\n    parentActive: boolean;\n\n    documentClickListener: any;\n\n    windowResizeListener: any;\n\n    triggerEventListener: any;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public zone: NgZone) { }\n\n    ngAfterViewInit() {\n        if (this.global) {\n            this.triggerEventListener = this.renderer.listen('document', this.triggerEvent, (event) => {\n                this.show(event);\n                event.preventDefault();\n            });\n        }\n        else if (this.target) {\n            this.triggerEventListener = this.renderer.listen(this.target, this.triggerEvent, (event) => {\n                this.show(event);\n                event.preventDefault();\n                event.stopPropagation();\n            });\n        }\n\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.containerViewChild.nativeElement);\n            else\n                DomHandler.appendChild(this.containerViewChild.nativeElement, this.appendTo);\n        }\n    }\n\n    show(event?: MouseEvent) {\n        this.position(event);\n        this.moveOnTop();\n        this.containerViewChild.nativeElement.style.display = 'block';\n        this.parentActive = true;\n        DomHandler.fadeIn(this.containerViewChild.nativeElement, 250);\n        this.bindGlobalListeners();\n\n        if (event) {\n            event.preventDefault();\n        }\n\n        this.onShow.emit();\n    }\n\n    hide() {\n        this.containerViewChild.nativeElement.style.display = 'none';\n        this.parentActive = false;\n        this.unbindGlobalListeners();\n        this.onHide.emit();\n    }\n\n    moveOnTop() {\n        if (this.autoZIndex) {\n            this.containerViewChild.nativeElement.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n        }\n    }\n\n    toggle(event?: MouseEvent) {\n        if (this.containerViewChild.nativeElement.offsetParent)\n            this.hide();\n        else\n            this.show(event);\n    }\n\n    position(event?: MouseEvent) {\n        if (event) {\n            let left = event.pageX + 1;\n            let top = event.pageY + 1;\n            let width = this.containerViewChild.nativeElement.offsetParent ? this.containerViewChild.nativeElement.offsetWidth : DomHandler.getHiddenElementOuterWidth(this.containerViewChild.nativeElement);\n            let height = this.containerViewChild.nativeElement.offsetParent ? this.containerViewChild.nativeElement.offsetHeight : DomHandler.getHiddenElementOuterHeight(this.containerViewChild.nativeElement);\n            let viewport = DomHandler.getViewport();\n\n            //flip\n            if (left + width - document.body.scrollLeft > viewport.width) {\n                left -= width;\n            }\n\n            //flip\n            if (top + height - document.body.scrollTop > viewport.height) {\n                top -= height;\n            }\n\n            //fit\n            if (left < document.body.scrollLeft) {\n                left = document.body.scrollLeft;\n            }\n\n            //fit\n            if (top < document.body.scrollTop) {\n                top = document.body.scrollTop;\n            }\n\n            this.containerViewChild.nativeElement.style.left = left + 'px';\n            this.containerViewChild.nativeElement.style.top = top + 'px';\n        }\n    }\n\n    bindGlobalListeners() {\n        if (!this.documentClickListener) {\n            this.documentClickListener = this.renderer.listen('document', 'click', (event) => {\n                if (this.containerViewChild.nativeElement.offsetParent && event.button !== 2) {\n                    this.hide();\n                }\n            });\n        }\n\n        this.zone.runOutsideAngular(() => {\n            if (!this.windowResizeListener) {\n                this.windowResizeListener = this.onWindowResize.bind(this);\n                window.addEventListener('resize', this.windowResizeListener);\n            }\n        });\n    }\n\n    unbindGlobalListeners() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n\n        if (this.windowResizeListener) {\n            window.removeEventListener('resize', this.windowResizeListener);\n            this.windowResizeListener = null;\n        }\n    }\n\n    onWindowResize(event) {\n        if (this.containerViewChild.nativeElement.offsetParent) {\n            this.hide();\n        }\n    }\n\n    ngOnDestroy() {\n        this.unbindGlobalListeners();\n\n        if (this.triggerEventListener) {\n            this.triggerEventListener();\n        }\n\n        if (this.appendTo) {\n            this.el.nativeElement.appendChild(this.containerViewChild.nativeElement);\n        }\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule, RouterModule],\n    exports: [ContextMenu, RouterModule],\n    declarations: [ContextMenu, ContextMenuSub]\n})\nexport class ContextMenuModule { }\n"]}