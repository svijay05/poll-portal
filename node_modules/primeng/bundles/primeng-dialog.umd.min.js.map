{"version":3,"sources":["ng://primeng/dialog/dialog.ts"],"names":["idx","Dialog","el","renderer","zone","this","draggable","resizable","closeOnEscape","closable","showHeader","blockScroll","autoZIndex","baseZIndex","minX","minY","focusOnShow","focusTrap","transitionOptions","closeIcon","minimizeIcon","maximizeIcon","onShow","EventEmitter","onHide","visibleChange","id","_style","Object","defineProperty","prototype","_responsive","console","log","_breakpoint","_visible","value","maskVisible","__assign","originalStyle","focus","focusable","DomHandler","findSingle","container","runOutsideAngular","setTimeout","close","event","emit","preventDefault","enableModality","_this","dismissableMask","maskClickListener","listen","wrapper","isSameNode","target","contains","modal","addClass","document","body","disableModality","unbindMaskClickListener","removeClass","toggleMaximize","maximized","revertMaximize","maximize","preMaximizePageX","parseFloat","style","top","preMaximizePageY","left","preMaximizeContainerWidth","getOuterWidth","preMaximizeContainerHeight","getOuterHeight","preMaximizeContentHeight","contentViewChild","nativeElement","width","height","diffHeight","headerViewChild","footerViewChild","moveOnTop","zIndex","String","zindex","initDrag","hasClass","parentElement","dragging","lastPageX","pageX","lastPageY","pageY","onKeydown","which","focusableElements","getFocusableElements","length","activeElement","focusedIndex","indexOf","shiftKey","onDrag","containerWidth","containerHeight","deltaX","deltaY","offset","getOffset","leftPos","topPos","viewport","getViewport","endDrag","initResize","resizing","onResize","contentHeight","newWidth","newHeight","minWidth","minHeight","parseInt","onResizeEnd","bindGlobalListeners","bindDocumentKeydownListener","bindDocumentDragListener","bindDocumentDragEndListener","bindDocumentResizeListeners","bindDocumentEscapeListener","unbindGlobalListeners","unbindDocumentDragListener","unbindDocumentKeydownListener","unbindDocumentDragEndListener","unbindDocumentResizeListeners","unbindDocumentEscapeListener","documentKeydownListener","bind","window","addEventListener","removeEventListener","documentDragListener","documentDragEndListener","documentResizeListener","documentResizeEndListener","documentEscapeListener","appendContainer","appendTo","appendChild","restoreAppend","onAnimationStart","toState","element","onAnimationEnd","onContainerDestroy","ngOnDestroy","ElementRef","Renderer2","NgZone","__decorate","Input","ContentChildren","Header","descendants","Footer","ViewChild","Output","Component","selector","template","animations","trigger","state","transform","opacity","transition","animate","DialogModule","NgModule","imports","CommonModule","exports","SharedModule","declarations"],"mappings":"6lCAOIA,EAAc,EA+ClBC,EAAA,WAwII,SAAAA,EAAmBC,EAAuBC,EAA4BC,GAAnDC,KAAAH,GAAAA,EAAuBG,KAAAF,SAAAA,EAA4BE,KAAAD,KAAAA,EApI7DC,KAAAC,WAAqB,EAErBD,KAAAE,WAAqB,EAUrBF,KAAAG,eAAyB,EAMzBH,KAAAI,UAAoB,EAcpBJ,KAAAK,YAAsB,EAUtBL,KAAAM,aAAuB,EAEvBN,KAAAO,YAAsB,EAEtBP,KAAAQ,WAAqB,EAErBR,KAAAS,KAAe,EAEfT,KAAAU,KAAe,EAEfV,KAAAW,aAAuB,EAIvBX,KAAAY,WAAqB,EAErBZ,KAAAa,kBAA4B,mCAE5Bb,KAAAc,UAAoB,cAEpBd,KAAAe,aAAuB,wBAEvBf,KAAAgB,aAAuB,wBAYtBhB,KAAAiB,OAA4B,IAAIC,EAAAA,aAEhClB,KAAAmB,OAA4B,IAAID,EAAAA,aAEhClB,KAAAoB,cAAkC,IAAIF,EAAAA,aA8ChDlB,KAAAqB,GAAa,aAAa1B,IAE1BK,KAAAsB,OAAc,GAwblB,OApiBaC,OAAAC,eAAI5B,EAAA6B,UAAA,aAAU,KAAd,WACL,OAAO,OAGX,SAAeC,GACXC,QAAQC,IAAI,uEASPL,OAAAC,eAAI5B,EAAA6B,UAAA,aAAU,KAAd,WACL,OAAO,SAGX,SAAeI,GACXF,QAAQC,IAAI,uHA+FPL,OAAAC,eAAI5B,EAAA6B,UAAA,UAAO,KAAX,WACL,OAAOzB,KAAK8B,cAEhB,SAAYC,GACR/B,KAAK8B,SAAWC,EAEZ/B,KAAK8B,WAAa9B,KAAKgC,cACvBhC,KAAKgC,aAAc,oCAIlBT,OAAAC,eAAI5B,EAAA6B,UAAA,QAAK,KAAT,WACL,OAAOzB,KAAKsB,YAEhB,SAAUS,GACFA,IACA/B,KAAKsB,OAAMW,EAAA,GAAOF,GAClB/B,KAAKkC,cAAgBH,oCAI7BnC,EAAA6B,UAAAU,MAAA,WACI,IAAIC,EAAYC,EAAAA,WAAWC,WAAWtC,KAAKuC,UAAW,UAClDH,GACApC,KAAKD,KAAKyC,mBAAkB,WACxBC,YAAW,WAAM,OAAAL,EAAUD,UAAS,OAKhDvC,EAAA6B,UAAAiB,MAAA,SAAMC,GACF3C,KAAKoB,cAAcwB,MAAK,GACxBD,EAAME,kBAGVjD,EAAA6B,UAAAqB,eAAA,WAAA,IAAAC,EAAA/C,KACQA,KAAKI,UAAYJ,KAAKgD,kBACtBhD,KAAKiD,kBAAoBjD,KAAKF,SAASoD,OAAOlD,KAAKmD,QAAS,SAAS,SAACR,GAC7DI,EAAKR,UAAUa,WAAWT,EAAMU,SAAYN,EAAKR,UAAUe,SAASX,EAAMU,SAC3EN,EAAKL,MAAMC,OAKnB3C,KAAKuD,OAASvD,KAAKM,aACnB+B,EAAAA,WAAWmB,SAASC,SAASC,KAAM,uBAI3C9D,EAAA6B,UAAAkC,gBAAA,WACQ3D,KAAKmD,UACDnD,KAAKgD,iBACLhD,KAAK4D,0BAGL5D,KAAKuD,OAASvD,KAAKM,aACnB+B,EAAAA,WAAWwB,YAAYJ,SAASC,KAAM,wBAKlD9D,EAAA6B,UAAAqC,eAAA,SAAenB,GACP3C,KAAK+D,UACL/D,KAAKgE,iBAELhE,KAAKiE,WAETtB,EAAME,kBAGVjD,EAAA6B,UAAAwC,SAAA,WACIjE,KAAKkE,iBAAmBC,WAAWnE,KAAKuC,UAAU6B,MAAMC,KACxDrE,KAAKsE,iBAAmBH,WAAWnE,KAAKuC,UAAU6B,MAAMG,MACxDvE,KAAKwE,0BAA4BnC,EAAAA,WAAWoC,cAAczE,KAAKuC,WAC/DvC,KAAK0E,2BAA6BrC,EAAAA,WAAWsC,eAAe3E,KAAKuC,WACjEvC,KAAK4E,yBAA2BvC,EAAAA,WAAWsC,eAAe3E,KAAK6E,iBAAiBC,eAEhF9E,KAAKsB,OAAO+C,IAAMrE,KAAKkE,iBAAmB,MAAQ,GAClDlE,KAAKsB,OAAOiD,KAAOvE,KAAKsE,iBAAmB,MAAQ,GACnDtE,KAAKsB,OAAOyD,MAAQ,QACpB/E,KAAKsB,OAAO0D,OAAS,QACrB,IAAIC,EAAa,EACbjF,KAAKkF,iBAAmBlF,KAAKkF,gBAAgBJ,gBAC7CG,GAAc5C,EAAAA,WAAWsC,eAAe3E,KAAKkF,gBAAgBJ,gBAE7D9E,KAAKmF,iBAAmBnF,KAAKmF,gBAAgBL,gBAC7CG,GAAc5C,EAAAA,WAAWsC,eAAe3E,KAAKmF,gBAAgBL,gBAEjE9E,KAAK6E,iBAAiBC,cAAcV,MAAMY,OAAS,gBAAkBC,EAAY,MAEjF5C,EAAAA,WAAWmB,SAASxD,KAAKuC,UAAW,uBAC/BvC,KAAKM,aACN+B,EAAAA,WAAWmB,SAASC,SAASC,KAAM,sBAGvC1D,KAAKoF,YAELpF,KAAK+D,WAAY,GAGrBnE,EAAA6B,UAAAuC,eAAA,WAAA,IAAAjB,EAAA/C,KACIA,KAAKsB,OAAO+C,IAAMrE,KAAKkE,iBAAmBlE,KAAKkE,iBAAmB,KAAO,GACzElE,KAAKsB,OAAOiD,KAAOvE,KAAKsE,iBAAmBtE,KAAKsE,iBAAmB,KAAO,GAC1EtE,KAAKsB,OAAOyD,MAAQ/E,KAAKwE,0BAA4B,KACrDxE,KAAKsB,OAAO0D,OAAShF,KAAK0E,2BAA6B,KACvD1E,KAAK6E,iBAAiBC,cAAcV,MAAMY,OAAShF,KAAK4E,yBAA2B,KAE9E5E,KAAKM,aACN+B,EAAAA,WAAWwB,YAAYJ,SAASC,KAAM,sBAG1C1D,KAAK+D,WAAY,EAEjB/D,KAAKD,KAAKyC,mBAAkB,WACxBC,YAAW,WAAM,OAAAJ,EAAAA,WAAWwB,YAAYd,EAAKR,UAAW,yBAAwB,SAIxF3C,EAAA6B,UAAAmC,wBAAA,WACQ5D,KAAKiD,oBACLjD,KAAKiD,oBACLjD,KAAKiD,kBAAoB,OAIjCrD,EAAA6B,UAAA2D,UAAA,WACQpF,KAAKO,aACLP,KAAKuC,UAAU6B,MAAMiB,OAASC,OAAOtF,KAAKQ,cAAgB6B,EAAAA,WAAWkD,QACrEvF,KAAKmD,QAAQiB,MAAMiB,OAASC,OAAOtF,KAAKQ,YAAc6B,EAAAA,WAAWkD,OAAS,MAIlF3F,EAAA6B,UAAA+D,SAAA,SAAS7C,GACDN,EAAAA,WAAWoD,SAAS9C,EAAMU,OAAQ,4BAA8BhB,EAAAA,WAAWoD,SAAwB9C,EAAMU,OAAQqC,cAAe,4BAIhI1F,KAAKC,YACLD,KAAK2F,UAAW,EAChB3F,KAAK4F,UAAYjD,EAAMkD,MACvB7F,KAAK8F,UAAYnD,EAAMoD,MACvB1D,EAAAA,WAAWmB,SAASC,SAASC,KAAM,0BAI3C9D,EAAA6B,UAAAuE,UAAA,SAAUrD,GACN,GAAI3C,KAAKY,WACe,IAAhB+B,EAAMsD,MAAa,CACnBtD,EAAME,iBAEN,IAAIqD,EAAoB7D,EAAAA,WAAW8D,qBAAqBnG,KAAKuC,WAE7D,GAAI2D,GAAqBA,EAAkBE,OAAS,EAChD,GAAK3C,SAAS4C,cAGT,CACD,IAAIC,EAAeJ,EAAkBK,QAAQ9C,SAAS4C,eAElD1D,EAAM6D,UACe,GAAjBF,GAAuC,IAAjBA,EACtBJ,EAAkBA,EAAkBE,OAAS,GAAGjE,QAEhD+D,EAAkBI,EAAe,GAAGnE,SAGnB,GAAjBmE,GAAsBA,IAAkBJ,EAAkBE,OAAS,EACnEF,EAAkB,GAAG/D,QAErB+D,EAAkBI,EAAe,GAAGnE,aAf5C+D,EAAkB,GAAG/D,UAuBzCvC,EAAA6B,UAAAgF,OAAA,SAAO9D,GACH,GAAI3C,KAAK2F,SAAU,CACf,IAAIe,EAAiBrE,EAAAA,WAAWoC,cAAczE,KAAKuC,WAC/CoE,EAAkBtE,EAAAA,WAAWsC,eAAe3E,KAAKuC,WACjDqE,EAASjE,EAAMkD,MAAQ7F,KAAK4F,UAC5BiB,EAASlE,EAAMoD,MAAQ/F,KAAK8F,UAC5BgB,EAASzE,EAAAA,WAAW0E,UAAU/G,KAAKuC,WACnCyE,EAAUF,EAAOvC,KAAOqC,EACxBK,EAASH,EAAOzC,IAAMwC,EACtBK,EAAW7E,EAAAA,WAAW8E,cAEtBH,GAAWhH,KAAKS,MAASuG,EAAUN,EAAkBQ,EAASnC,QAC9D/E,KAAKsB,OAAOiD,KAAOyC,EAAU,KAC7BhH,KAAK4F,UAAYjD,EAAMkD,MACvB7F,KAAKuC,UAAU6B,MAAMG,KAAOyC,EAAU,MAGtCC,GAAUjH,KAAKU,MAASuG,EAASN,EAAmBO,EAASlC,SAC7DhF,KAAKsB,OAAO+C,IAAM4C,EAAS,KAC3BjH,KAAK8F,UAAYnD,EAAMoD,MACvB/F,KAAKuC,UAAU6B,MAAMC,IAAM4C,EAAS,QAKhDrH,EAAA6B,UAAA2F,QAAA,SAAQzE,GACA3C,KAAKC,YACLD,KAAK2F,UAAW,EAChBtD,EAAAA,WAAWwB,YAAYJ,SAASC,KAAM,0BAI9C9D,EAAA6B,UAAA4F,WAAA,SAAW1E,GACH3C,KAAKE,YACLF,KAAKsH,UAAW,EAChBtH,KAAK4F,UAAYjD,EAAMkD,MACvB7F,KAAK8F,UAAYnD,EAAMoD,MACvB1D,EAAAA,WAAWmB,SAASC,SAASC,KAAM,0BAI3C9D,EAAA6B,UAAA8F,SAAA,SAAS5E,GACL,GAAI3C,KAAKsH,SAAU,CACf,IAAIV,EAASjE,EAAMkD,MAAQ7F,KAAK4F,UAC5BiB,EAASlE,EAAMoD,MAAQ/F,KAAK8F,UAC5BY,EAAiBrE,EAAAA,WAAWoC,cAAczE,KAAKuC,WAC/CoE,EAAkBtE,EAAAA,WAAWsC,eAAe3E,KAAKuC,WACjDiF,EAAgBnF,EAAAA,WAAWsC,eAAe3E,KAAK6E,iBAAiBC,eAChE2C,EAAWf,EAAiBE,EAC5Bc,EAAYf,EAAkBE,EAC9Bc,EAAW3H,KAAKuC,UAAU6B,MAAMuD,SAChCC,EAAY5H,KAAKuC,UAAU6B,MAAMwD,UACjCd,EAASzE,EAAAA,WAAW0E,UAAU/G,KAAKuC,WACnC2E,EAAW7E,EAAAA,WAAW8E,gBAEpBQ,GAAYF,EAAWI,SAASF,KAAeb,EAAOvC,KAAOkD,EAAYP,EAASnC,QACpF/E,KAAKsB,OAAOyD,MAAQ0C,EAAW,KAC/BzH,KAAKuC,UAAU6B,MAAMW,MAAQ/E,KAAKsB,OAAOyD,SAGvC6C,GAAaF,EAAYG,SAASD,KAAgBd,EAAOzC,IAAMqD,EAAaR,EAASlC,SACvFhF,KAAK6E,iBAAiBC,cAAcV,MAAMY,OAASwC,EAAgBX,EAAS,MAGhF7G,KAAK4F,UAAYjD,EAAMkD,MACvB7F,KAAK8F,UAAYnD,EAAMoD,QAI/BnG,EAAA6B,UAAAqG,YAAA,WACQ9H,KAAKsH,WACLtH,KAAKsH,UAAW,EAChBjF,EAAAA,WAAWwB,YAAYJ,SAASC,KAAM,0BAI9C9D,EAAA6B,UAAAsG,oBAAA,WACQ/H,KAAKY,WACLZ,KAAKgI,8BAGLhI,KAAKC,YACLD,KAAKiI,2BACLjI,KAAKkI,+BAGLlI,KAAKE,WACLF,KAAKmI,8BAGLnI,KAAKG,eAAiBH,KAAKI,UAC3BJ,KAAKoI,8BAIbxI,EAAA6B,UAAA4G,sBAAA,WACIrI,KAAKsI,6BACLtI,KAAKuI,gCACLvI,KAAKwI,gCACLxI,KAAKyI,gCACLzI,KAAK0I,gCAGT9I,EAAA6B,UAAAuG,4BAAA,WAAA,IAAAjF,EAAA/C,KACIA,KAAKD,KAAKyC,mBAAkB,WACxBO,EAAK4F,wBAA0B5F,EAAKiD,UAAU4C,KAAK7F,GACnD8F,OAAOpF,SAASqF,iBAAiB,UAAW/F,EAAK4F,6BAIzD/I,EAAA6B,UAAA8G,8BAAA,WACQvI,KAAK2I,0BACLE,OAAOpF,SAASsF,oBAAoB,UAAW/I,KAAK2I,yBACpD3I,KAAK2I,wBAA0B,OAIvC/I,EAAA6B,UAAAwG,yBAAA,WAAA,IAAAlF,EAAA/C,KACIA,KAAKD,KAAKyC,mBAAkB,WACxBO,EAAKiG,qBAAuBjG,EAAK0D,OAAOmC,KAAK7F,GAC7C8F,OAAOpF,SAASqF,iBAAiB,YAAa/F,EAAKiG,0BAI3DpJ,EAAA6B,UAAA6G,2BAAA,WACQtI,KAAKgJ,uBACLH,OAAOpF,SAASsF,oBAAoB,YAAa/I,KAAKgJ,sBACtDhJ,KAAKgJ,qBAAuB,OAIpCpJ,EAAA6B,UAAAyG,4BAAA,WAAA,IAAAnF,EAAA/C,KACIA,KAAKD,KAAKyC,mBAAkB,WACxBO,EAAKkG,wBAA0BlG,EAAKqE,QAAQwB,KAAK7F,GACjD8F,OAAOpF,SAASqF,iBAAiB,UAAW/F,EAAKkG,6BAIzDrJ,EAAA6B,UAAA+G,8BAAA,WACQxI,KAAKiJ,0BACLJ,OAAOpF,SAASsF,oBAAoB,UAAW/I,KAAKiJ,yBACpDjJ,KAAKiJ,wBAA0B,OAIvCrJ,EAAA6B,UAAA0G,4BAAA,WAAA,IAAApF,EAAA/C,KACIA,KAAKD,KAAKyC,mBAAkB,WACxBO,EAAKmG,uBAAyBnG,EAAKwE,SAASqB,KAAK7F,GACjDA,EAAKoG,0BAA4BpG,EAAK+E,YAAYc,KAAK7F,GACvD8F,OAAOpF,SAASqF,iBAAiB,YAAa/F,EAAKmG,wBACnDL,OAAOpF,SAASqF,iBAAiB,UAAW/F,EAAKoG,+BAIzDvJ,EAAA6B,UAAAgH,8BAAA,WACQzI,KAAKkJ,wBAA0BlJ,KAAKmJ,4BACpCN,OAAOpF,SAASsF,oBAAoB,YAAa/I,KAAKkJ,wBACtDL,OAAOpF,SAASsF,oBAAoB,UAAW/I,KAAKmJ,2BACpDnJ,KAAKkJ,uBAAyB,KAC9BlJ,KAAKmJ,0BAA4B,OAIzCvJ,EAAA6B,UAAA2G,2BAAA,WAAA,IAAArF,EAAA/C,KACIA,KAAKoJ,uBAAyBpJ,KAAKF,SAASoD,OAAO,WAAY,WAAW,SAACP,GACpD,IAAfA,EAAMsD,OACF4B,SAAS9E,EAAKR,UAAU6B,MAAMiB,UAAahD,EAAAA,WAAWkD,OAASxC,EAAKvC,YACpEuC,EAAKL,MAAMC,OAM3B/C,EAAA6B,UAAAiH,6BAAA,WACQ1I,KAAKoJ,yBACLpJ,KAAKoJ,yBACLpJ,KAAKoJ,uBAAyB,OAItCxJ,EAAA6B,UAAA4H,gBAAA,WACQrJ,KAAKsJ,WACiB,SAAlBtJ,KAAKsJ,SACL7F,SAASC,KAAK6F,YAAYvJ,KAAKuC,WAE/BF,EAAAA,WAAWkH,YAAYvJ,KAAKuC,UAAWvC,KAAKsJ,YAIxD1J,EAAA6B,UAAA+H,cAAA,WACQxJ,KAAKuC,WAAavC,KAAKsJ,UACvBtJ,KAAKH,GAAGiF,cAAcyE,YAAYvJ,KAAKuC,YAI/C3C,EAAA6B,UAAAgI,iBAAA,SAAiB9G,GACb,OAAOA,EAAM+G,SACT,IAAK,UACD1J,KAAKuC,UAAYI,EAAMgH,QACvB3J,KAAKmD,QAAUnD,KAAKuC,UAAUmD,cAC9B1F,KAAKiB,OAAO2B,KAAK,IACjB5C,KAAKqJ,kBACLrJ,KAAKoF,YACLpF,KAAK+H,sBAED/H,KAAK+D,WACL1B,EAAAA,WAAWmB,SAASC,SAASC,KAAM,sBAGnC1D,KAAKuD,OACLvD,KAAK8C,iBAGL9C,KAAKW,aACLX,KAAKmC,UAMrBvC,EAAA6B,UAAAmI,eAAA,SAAejH,GACX,OAAOA,EAAM+G,SACT,IAAK,OACD1J,KAAK6J,qBACL7J,KAAKmB,OAAOyB,KAAK,MAK7BhD,EAAA6B,UAAAoI,mBAAA,WACI7J,KAAKqI,wBACLrI,KAAK2F,UAAW,EAEhB3F,KAAKgC,aAAc,EAEfhC,KAAK+D,YACL1B,EAAAA,WAAWwB,YAAYJ,SAASC,KAAM,sBACtC1D,KAAK+D,WAAY,GAGjB/D,KAAKuD,OACLvD,KAAK2D,kBAGT3D,KAAKuC,UAAY,KACjBvC,KAAKmD,QAAU,KAEfnD,KAAKsB,OAAStB,KAAKkC,cAAaD,EAAA,GAAOjC,KAAKkC,eAAiB,IAGjEtC,EAAA6B,UAAAqI,YAAA,WACQ9J,KAAKuC,YACLvC,KAAKwJ,gBACLxJ,KAAK6J,gEAhbUE,EAAAA,kBAA6BC,EAAAA,iBAAwBC,EAAAA,UAtInEC,EAAA,CAARC,EAAAA,sCAEQD,EAAA,CAARC,EAAAA,yCAEQD,EAAA,CAARC,EAAAA,yCAEQD,EAAA,CAARC,EAAAA,4CAEQD,EAAA,CAARC,EAAAA,2CAEQD,EAAA,CAARC,EAAAA,4CAEQD,EAAA,CAARC,EAAAA,qCAEQD,EAAA,CAARC,EAAAA,6CAEQD,EAAA,CAARC,EAAAA,+CAEQD,EAAA,CAARC,EAAAA,mCAEQD,EAAA,CAARC,EAAAA,wCAEQD,EAAA,CAARC,EAAAA,wCAQQD,EAAA,CAARC,EAAAA,wCAEQD,EAAA,CAARC,EAAAA,0CAEQD,EAAA,CAARC,EAAAA,0CAEQD,EAAA,CAARC,EAAAA,wCAQQD,EAAA,CAARC,EAAAA,2CAEQD,EAAA,CAARC,EAAAA,0CAEQD,EAAA,CAARC,EAAAA,0CAEQD,EAAA,CAARC,EAAAA,oCAEQD,EAAA,CAARC,EAAAA,oCAEQD,EAAA,CAARC,EAAAA,2CAEQD,EAAA,CAARC,EAAAA,2CAEQD,EAAA,CAARC,EAAAA,yCAEQD,EAAA,CAARC,EAAAA,iDAEQD,EAAA,CAARC,EAAAA,yCAEQD,EAAA,CAARC,EAAAA,4CAEQD,EAAA,CAARC,EAAAA,4CAE8CD,EAAA,CAA9CE,EAAAA,gBAAgBC,EAAAA,OAAQ,CAACC,aAAa,uCAEQJ,EAAA,CAA9CE,EAAAA,gBAAgBG,EAAAA,OAAQ,CAACD,aAAa,uCAEhBJ,EAAA,CAAtBM,EAAAA,UAAU,mDAEWN,EAAA,CAArBM,EAAAA,UAAU,mDAEUN,EAAA,CAApBM,EAAAA,UAAU,iDAEDN,EAAA,CAATO,EAAAA,uCAESP,EAAA,CAATO,EAAAA,uCAESP,EAAA,CAATO,EAAAA,8CAsDQP,EAAA,CAARC,EAAAA,qCAWQD,EAAA,CAARC,EAAAA,mCArJQvK,EAAMsK,EAAA,CA7ClBQ,EAAAA,UAAU,CACXC,SAAU,WACVC,SAAU,g6EA6BVC,WAAY,CACRC,EAAAA,QAAQ,YAAa,CACjBC,EAAAA,MAAM,OAAQ3G,EAAAA,MAAM,CAChB4G,UAAW,aACXC,QAAS,KAEbF,EAAAA,MAAM,UAAW3G,EAAAA,MAAM,CACnB4G,UAAW,OACXC,QAAS,KAEbC,EAAAA,WAAW,SAAUC,EAAAA,QAAQ,+BAIxBvL,GAAb,gBAmkBA,SAAAwL,KAA4B,OAAfA,EAAYlB,EAAA,CALxBmB,EAAAA,SAAS,CACVC,QAAS,CAACC,EAAAA,cACVC,QAAS,CAAC5L,EAAO6L,EAAAA,cACjBC,aAAc,CAAC9L,MAEFwL","sourcesContent":["import {NgModule,Component,ElementRef,OnDestroy,Input,Output,EventEmitter,Renderer2,\n    ContentChildren,QueryList,ViewChild,NgZone} from '@angular/core';\nimport {trigger,state,style,transition,animate,AnimationEvent} from '@angular/animations';\nimport {CommonModule} from '@angular/common';\nimport {DomHandler} from 'primeng/dom';\nimport {Header,Footer,SharedModule} from 'primeng/api';\n\nlet idx: number = 0;\n\n@Component({\nselector: 'p-dialog',\ntemplate: `\n    <div class=\"ui-dialog-wrapper\" [ngClass]=\"{'ui-widget-overlay ui-dialog-mask': modal, 'ui-dialog-mask-scrollblocker': modal && blockScroll}\" *ngIf=\"maskVisible\">\n        <div #container [ngClass]=\"{'ui-dialog ui-widget ui-widget-content ui-corner-all ui-shadow':true, 'ui-dialog-rtl':rtl,'ui-dialog-draggable':draggable,'ui-dialog-resizable':resizable}\"\n            [ngStyle]=\"style\" [class]=\"styleClass\" *ngIf=\"visible\"\n            [@animation]=\"{value: 'visible', params: {transitionParams: transitionOptions}}\" (@animation.start)=\"onAnimationStart($event)\" (@animation.done)=\"onAnimationEnd($event)\" role=\"dialog\" [attr.aria-labelledby]=\"id + '-label'\">\n            <div #titlebar class=\"ui-dialog-titlebar ui-widget-header ui-helper-clearfix ui-corner-top\" (mousedown)=\"initDrag($event)\" *ngIf=\"showHeader\">\n                <span [attr.id]=\"id + '-label'\" class=\"ui-dialog-title\" *ngIf=\"header\">{{header}}</span>\n                <span [attr.id]=\"id + '-label'\" class=\"ui-dialog-title\" *ngIf=\"headerFacet && headerFacet.first\">\n                    <ng-content select=\"p-header\"></ng-content>\n                </span>\n                <div class=\"ui-dialog-titlebar-icons\">\n                    <a *ngIf=\"maximizable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-maximize ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"toggleMaximize($event)\" (keydown.enter)=\"toggleMaximize($event)\">\n                        <span [ngClass]=\"maximized ? minimizeIcon : maximizeIcon\"></span>\n                    </a>\n                    <a *ngIf=\"closable\" [ngClass]=\"{'ui-dialog-titlebar-icon ui-dialog-titlebar-close ui-corner-all':true}\" tabindex=\"0\" role=\"button\" (click)=\"close($event)\" (keydown.enter)=\"close($event)\">\n                        <span [class]=\"closeIcon\"></span>\n                    </a>\n                </div>\n            </div>\n            <div #content class=\"ui-dialog-content ui-widget-content\" [ngStyle]=\"contentStyle\">\n                <ng-content></ng-content>\n            </div>\n            <div #footer class=\"ui-dialog-footer ui-widget-content\" *ngIf=\"footerFacet && footerFacet.first\">\n                <ng-content select=\"p-footer\"></ng-content>\n            </div>\n            <div *ngIf=\"resizable\" class=\"ui-resizable-handle ui-resizable-se ui-icon ui-icon-gripsmall-diagonal-se\" style=\"z-index: 90;\" (mousedown)=\"initResize($event)\"></div>\n        </div>\n    </div>\n`,\nanimations: [\n    trigger('animation', [\n        state('void', style({\n            transform: 'scale(0.7)',\n            opacity: 0\n        })),\n        state('visible', style({\n            transform: 'none',\n            opacity: 1\n        })),\n        transition('* => *', animate('{{transitionParams}}'))\n    ])\n]\n})\nexport class Dialog implements OnDestroy {\n\n    @Input() header: string;\n\n    @Input() draggable: boolean = true;\n\n    @Input() resizable: boolean = true;\n\n    @Input() positionLeft: number;\n\n    @Input() positionTop: number;\n\n    @Input() contentStyle: any;\n\n    @Input() modal: boolean;\n\n    @Input() closeOnEscape: boolean = true;\n\n    @Input() dismissableMask: boolean;\n\n    @Input() rtl: boolean;\n\n    @Input() closable: boolean = true;\n\n    @Input() get responsive(): boolean {\n        return false;\n    };\n    \n    set responsive(_responsive: boolean) {\n        console.log(\"Responsive property is deprecated.\");\n    }\n\n    @Input() appendTo: any;\n\n    @Input() styleClass: string;\n\n    @Input() showHeader: boolean = true;\n\n    @Input() get breakpoint(): number {\n        return 649;\n    };\n    \n    set breakpoint(_breakpoint: number) {\n        console.log(\"Breakpoint property is not utilized and deprecated, use CSS media queries instead.\");\n    }\n\n    @Input() blockScroll: boolean = false;\n\n    @Input() autoZIndex: boolean = true;\n\n    @Input() baseZIndex: number = 0;\n\n    @Input() minX: number = 0;\n\n    @Input() minY: number = 0;\n\n    @Input() focusOnShow: boolean = true;\n\n    @Input() maximizable: boolean;\n\n    @Input() focusTrap: boolean = true;\n\n    @Input() transitionOptions: string = '150ms cubic-bezier(0, 0, 0.2, 1)';\n\n    @Input() closeIcon: string = 'pi pi-times';\n\n    @Input() minimizeIcon: string = 'pi pi-window-minimize';\n\n    @Input() maximizeIcon: string = 'pi pi-window-maximize';\n\n    @ContentChildren(Header, {descendants: false}) headerFacet: QueryList<Header>;\n\n    @ContentChildren(Footer, {descendants: false}) footerFacet: QueryList<Header>;\n        \n    @ViewChild('titlebar') headerViewChild: ElementRef;\n\n    @ViewChild('content') contentViewChild: ElementRef;\n\n    @ViewChild('footer') footerViewChild: ElementRef;\n\n    @Output() onShow: EventEmitter<any> = new EventEmitter();\n\n    @Output() onHide: EventEmitter<any> = new EventEmitter();\n\n    @Output() visibleChange:EventEmitter<any> = new EventEmitter();\n\n    _visible: boolean;\n\n    maskVisible: boolean;\n\n    container: HTMLDivElement;\n\n    wrapper: HTMLElement;\n\n    dragging: boolean;\n\n    documentDragListener: any;\n\n    documentKeydownListener: any;\n\n    documentDragEndListener: any;\n\n    resizing: boolean;\n\n    documentResizeListener: any;\n\n    documentResizeEndListener: any;\n\n    documentEscapeListener: Function;\n\n    maskClickListener: Function;\n\n    lastPageX: number;Ã¦\n\n    lastPageY: number;\n\n    preventVisibleChangePropagation: boolean;\n        \n    maximized: boolean;\n\n    preMaximizeContentHeight: number;\n\n    preMaximizeContainerWidth: number;\n\n    preMaximizeContainerHeight: number;\n\n    preMaximizePageX: number;\n\n    preMaximizePageY: number;\n\n    id: string = `ui-dialog-${idx++}`;\n\n    _style: any = {};\n\n    originalStyle: any;\n\n    constructor(public el: ElementRef, public renderer: Renderer2, public zone: NgZone) {}\n\n    @Input() get visible(): any {\n        return this._visible;\n    }\n    set visible(value:any) {\n        this._visible = value;\n        \n        if (this._visible && !this.maskVisible) {\n            this.maskVisible = true;\n        }\n    }\n\n    @Input() get style(): any {\n        return this._style;\n    }\n    set style(value:any) {\n        if (value) {\n            this._style = {...value};\n            this.originalStyle = value;\n        }\n    }\n\n    focus() {\n        let focusable = DomHandler.findSingle(this.container, 'button');\n        if (focusable) {\n            this.zone.runOutsideAngular(() => {\n                setTimeout(() => focusable.focus(), 5);\n            });\n        }\n    }\n\n    close(event: Event) {\n        this.visibleChange.emit(false);\n        event.preventDefault();\n    }\n\n    enableModality() {\n        if (this.closable && this.dismissableMask) {\n            this.maskClickListener = this.renderer.listen(this.wrapper, 'click', (event: any) => {\n                if (!this.container.isSameNode(event.target) && !this.container.contains(event.target)) {\n                    this.close(event);\n                }\n            });\n        }\n\n        if (this.modal && this.blockScroll) {\n            DomHandler.addClass(document.body, 'ui-overflow-hidden');\n        }\n    }\n\n    disableModality() {\n        if (this.wrapper) {\n            if (this.dismissableMask) {\n                this.unbindMaskClickListener();\n            }\n\n            if (this.modal && this.blockScroll) {\n                DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n            }\n        }\n    }\n\n    toggleMaximize(event) {\n        if (this.maximized)\n            this.revertMaximize();\n        else\n            this.maximize();\n\n        event.preventDefault();\n    }\n\n    maximize() {\n        this.preMaximizePageX = parseFloat(this.container.style.top);\n        this.preMaximizePageY = parseFloat(this.container.style.left);\n        this.preMaximizeContainerWidth = DomHandler.getOuterWidth(this.container);\n        this.preMaximizeContainerHeight = DomHandler.getOuterHeight(this.container);\n        this.preMaximizeContentHeight = DomHandler.getOuterHeight(this.contentViewChild.nativeElement);\n\n        this._style.top = this.preMaximizePageX ? '0px' : '';\n        this._style.left = this.preMaximizePageY ? '0px' : '';\n        this._style.width = '100vw';\n        this._style.height = '100vh';\n        let diffHeight = 0;\n        if (this.headerViewChild && this.headerViewChild.nativeElement) {\n            diffHeight += DomHandler.getOuterHeight(this.headerViewChild.nativeElement);\n        }\n        if (this.footerViewChild && this.footerViewChild.nativeElement) {\n            diffHeight += DomHandler.getOuterHeight(this.footerViewChild.nativeElement);\n        }\n        this.contentViewChild.nativeElement.style.height = 'calc(100vh - ' + diffHeight +'px)';\n\n        DomHandler.addClass(this.container, 'ui-dialog-maximized');\n        if (!this.blockScroll) {\n            DomHandler.addClass(document.body, 'ui-overflow-hidden');\n        }\n\n        this.moveOnTop();\n\n        this.maximized = true;\n    }\n\n    revertMaximize() {\n        this._style.top = this.preMaximizePageX ? this.preMaximizePageX + 'px' : '';\n        this._style.left = this.preMaximizePageY ? this.preMaximizePageY + 'px' : '';\n        this._style.width = this.preMaximizeContainerWidth + 'px';\n        this._style.height = this.preMaximizeContainerHeight + 'px';\n        this.contentViewChild.nativeElement.style.height = this.preMaximizeContentHeight + 'px';\n\n        if (!this.blockScroll) {\n            DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n        }\n\n        this.maximized = false;\n\n        this.zone.runOutsideAngular(() => {\n            setTimeout(() => DomHandler.removeClass(this.container, 'ui-dialog-maximized'), 300);\n        });\n    }\n\n    unbindMaskClickListener() {\n        if (this.maskClickListener) {\n            this.maskClickListener();\n            this.maskClickListener = null;\n        }\n    }\n\n    moveOnTop() {\n        if (this.autoZIndex) {\n            this.container.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n            this.wrapper.style.zIndex = String(this.baseZIndex + (DomHandler.zindex - 1));\n        }\n    }\n\n    initDrag(event: MouseEvent) {\n        if (DomHandler.hasClass(event.target, 'ui-dialog-titlebar-icon') ||Â DomHandler.hasClass((<HTMLElement> event.target).parentElement, 'ui-dialog-titlebar-icon')) {\n            return;\n        }\n        \n        if (this.draggable) {\n            this.dragging = true;\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n            DomHandler.addClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        if (this.focusTrap) {\n            if (event.which === 9) {\n                event.preventDefault();\n                \n                let focusableElements = DomHandler.getFocusableElements(this.container);\n\n                if (focusableElements && focusableElements.length > 0) {\n                    if (!document.activeElement) {\n                        focusableElements[0].focus();\n                    }\n                    else {\n                        let focusedIndex = focusableElements.indexOf(document.activeElement);\n\n                        if (event.shiftKey) {\n                            if (focusedIndex == -1 || focusedIndex === 0)\n                                focusableElements[focusableElements.length - 1].focus();\n                            else\n                                focusableElements[focusedIndex - 1].focus();\n                        }\n                        else {\n                            if (focusedIndex == -1 || focusedIndex === (focusableElements.length - 1))\n                                focusableElements[0].focus();\n                            else\n                                focusableElements[focusedIndex + 1].focus();\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    onDrag(event: MouseEvent) {\n        if (this.dragging) {\n            let containerWidth = DomHandler.getOuterWidth(this.container);\n            let containerHeight = DomHandler.getOuterHeight(this.container);\n            let deltaX = event.pageX - this.lastPageX;\n            let deltaY = event.pageY - this.lastPageY;\n            let offset = DomHandler.getOffset(this.container);\n            let leftPos = offset.left + deltaX;\n            let topPos = offset.top + deltaY;\n            let viewport = DomHandler.getViewport();\n\n            if (leftPos >= this.minX && (leftPos + containerWidth) < viewport.width) {\n                this._style.left = leftPos + 'px';\n                this.lastPageX = event.pageX;\n                this.container.style.left = leftPos + 'px';\n            }\n\n            if (topPos >= this.minY && (topPos + containerHeight) < viewport.height) {\n                this._style.top = topPos + 'px';\n                this.lastPageY = event.pageY;\n                this.container.style.top = topPos + 'px';\n            }\n        }\n    }\n\n    endDrag(event: MouseEvent) {\n        if (this.draggable) {\n            this.dragging = false;\n            DomHandler.removeClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    initResize(event: MouseEvent) {\n        if (this.resizable) {\n            this.resizing = true;\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n            DomHandler.addClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    onResize(event: MouseEvent) {\n        if (this.resizing) {\n            let deltaX = event.pageX - this.lastPageX;\n            let deltaY = event.pageY - this.lastPageY;\n            let containerWidth = DomHandler.getOuterWidth(this.container);\n            let containerHeight = DomHandler.getOuterHeight(this.container);\n            let contentHeight = DomHandler.getOuterHeight(this.contentViewChild.nativeElement);\n            let newWidth = containerWidth + deltaX;\n            let newHeight = containerHeight + deltaY;\n            let minWidth = this.container.style.minWidth;\n            let minHeight = this.container.style.minHeight;\n            let offset = DomHandler.getOffset(this.container);\n            let viewport = DomHandler.getViewport();\n\n            if ((!minWidth || newWidth > parseInt(minWidth)) && (offset.left + newWidth) < viewport.width) {\n                this._style.width = newWidth + 'px';\n                this.container.style.width = this._style.width;\n            }\n            \n            if ((!minHeight || newHeight > parseInt(minHeight)) && (offset.top + newHeight) < viewport.height) {\n                this.contentViewChild.nativeElement.style.height = contentHeight + deltaY + 'px';\n            }\n\n            this.lastPageX = event.pageX;\n            this.lastPageY = event.pageY;\n        }\n    }\n\n    onResizeEnd() {\n        if (this.resizing) {\n            this.resizing = false;\n            DomHandler.removeClass(document.body, 'ui-unselectable-text');\n        }\n    }\n\n    bindGlobalListeners() {\n        if (this.focusTrap) {\n            this.bindDocumentKeydownListener();\n        }\n\n        if (this.draggable) {\n            this.bindDocumentDragListener();\n            this.bindDocumentDragEndListener();\n        }\n        \n        if (this.resizable) {\n            this.bindDocumentResizeListeners();\n        }\n        \n        if (this.closeOnEscape && this.closable) {\n            this.bindDocumentEscapeListener();\n        }\n    }\n\n    unbindGlobalListeners() {\n        this.unbindDocumentDragListener();\n        this.unbindDocumentKeydownListener();\n        this.unbindDocumentDragEndListener();\n        this.unbindDocumentResizeListeners();\n        this.unbindDocumentEscapeListener();\n    }\n\n    bindDocumentKeydownListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentKeydownListener = this.onKeydown.bind(this);\n            window.document.addEventListener('keydown', this.documentKeydownListener);\n        });\n    }\n\n    unbindDocumentKeydownListener() {\n        if (this.documentKeydownListener) {\n            window.document.removeEventListener('keydown', this.documentKeydownListener);\n            this.documentKeydownListener = null;\n        }\n    }\n\n    bindDocumentDragListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentDragListener = this.onDrag.bind(this);\n            window.document.addEventListener('mousemove', this.documentDragListener);\n        });\n    }\n\n    unbindDocumentDragListener() {\n        if (this.documentDragListener) {\n            window.document.removeEventListener('mousemove', this.documentDragListener);\n            this.documentDragListener = null;\n        }\n    }\n\n    bindDocumentDragEndListener() {\n        this.zone.runOutsideAngular(() => {\n            this.documentDragEndListener = this.endDrag.bind(this);\n            window.document.addEventListener('mouseup', this.documentDragEndListener);\n        });\n    }\n\n    unbindDocumentDragEndListener() {\n        if (this.documentDragEndListener) {\n            window.document.removeEventListener('mouseup', this.documentDragEndListener);\n            this.documentDragEndListener = null;\n        }\n    }\n\n    bindDocumentResizeListeners() {\n        this.zone.runOutsideAngular(() => {\n            this.documentResizeListener = this.onResize.bind(this);\n            this.documentResizeEndListener = this.onResizeEnd.bind(this);\n            window.document.addEventListener('mousemove', this.documentResizeListener);\n            window.document.addEventListener('mouseup', this.documentResizeEndListener);\n        });\n    }\n\n    unbindDocumentResizeListeners() {\n        if (this.documentResizeListener && this.documentResizeEndListener) {\n            window.document.removeEventListener('mousemove', this.documentResizeListener);\n            window.document.removeEventListener('mouseup', this.documentResizeEndListener);\n            this.documentResizeListener = null;\n            this.documentResizeEndListener = null;\n        }\n    }\n\n    bindDocumentEscapeListener() {\n        this.documentEscapeListener = this.renderer.listen('document', 'keydown', (event) => {\n            if (event.which == 27) {\n                if (parseInt(this.container.style.zIndex) === (DomHandler.zindex + this.baseZIndex)) {\n                    this.close(event);\n                }\n            }\n        });\n    }\n\n    unbindDocumentEscapeListener() {\n        if (this.documentEscapeListener) {\n            this.documentEscapeListener();\n            this.documentEscapeListener = null;\n        }\n    }\n\n    appendContainer() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.container);\n            else\n                DomHandler.appendChild(this.container, this.appendTo);\n        }\n    }\n\n    restoreAppend() {\n        if (this.container && this.appendTo) {\n            this.el.nativeElement.appendChild(this.container);\n        }\n    }\n\n    onAnimationStart(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'visible':\n                this.container = event.element;\n                this.wrapper = this.container.parentElement;\n                this.onShow.emit({});\n                this.appendContainer();\n                this.moveOnTop();\n                this.bindGlobalListeners();\n        \n                if (this.maximized) {\n                    DomHandler.addClass(document.body, 'ui-overflow-hidden');\n                }\n                \n                if (this.modal) {\n                    this.enableModality();\n                }\n        \n                if (this.focusOnShow) {\n                    this.focus();\n                }\n            break;\n        }\n    }\n\n    onAnimationEnd(event: AnimationEvent) {\n        switch(event.toState) {\n            case 'void':\n                this.onContainerDestroy();\n                this.onHide.emit({});\n            break;\n        }\n    }\n\n    onContainerDestroy() {\n        this.unbindGlobalListeners();\n        this.dragging = false;\n\n        this.maskVisible = false;\n\n        if (this.maximized) {\n            DomHandler.removeClass(document.body, 'ui-overflow-hidden');\n            this.maximized = false;\n        }\n        \n        if (this.modal) {\n            this.disableModality();\n        }\n\n        this.container = null;\n        this.wrapper = null;\n\n        this._style = this.originalStyle ? {...this.originalStyle} : {};\n    }\n\n    ngOnDestroy() {\n        if (this.container) {\n            this.restoreAppend();\n            this.onContainerDestroy();\n        }\n    }\n\n}\n\n@NgModule({\nimports: [CommonModule],\nexports: [Dialog,SharedModule],\ndeclarations: [Dialog]\n})\nexport class DialogModule { }"]}